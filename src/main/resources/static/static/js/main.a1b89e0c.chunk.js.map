{"version":3,"sources":["types/types.js","helpers/queryFetch.js","util/messages.js","helpers/controlErrorFetch.js","actions/grupoAction.js","util/host.js","util/constant.js","actions/ramaAction.js","actions/seccionAction.js","helpers/commandFetch.js","actions/authAction.js","components/ui/NavbarLogout.js","components/ui/NavbarOptions.js","components/ui/Navbar.js","hooks/useForm.js","components/login/LoginForm.js","components/login/LoginScreen.js","components/usuario/usuario-create/UsuarioFormCreateButtons.js","components/usuario/usuario-update/UsuarioFormUpdateButtons.js","components/usuario/UsuarioForm.js","components/usuario/usuario-create/UsuarioCreateScreen.js","routers/PublicRoute.js","components/anecdota-listado/AnecdotaListadoTableRow.js","components/anecdota-listado/AnecdotaListadoTable.js","util/selectors.js","components/anecdota-listado/AnecdotaListadoFilter.js","components/anecdota-listado/AnecdotaListadoScreen.js","components/anecdota/AnecdotaForm.js","components/anecdota/AnecdotaScreen.js","components/cargo/CargoForm.js","components/cargo/CargoTableRowForm.js","components/cargo/CargoTableForm.js","components/cargo/CargoScreen.js","components/grupo/GrupoForm.js","components/grupo/GrupoTableRowForm.js","components/grupo/GrupoTableForm.js","components/grupo/GrupoScreen.js","components/inicio/InicioScreen.js","components/rama/RamaForm.js","components/rama/RamaTableRowForm.js","components/rama/RamaTableForm.js","components/rama/RamaScreen.js","components/seccion/SeccionForm.js","components/seccion/SeccionTableRowForm.js","components/seccion/SeccionTableForm.js","components/seccion/SeccionScreen.js","components/usuario/usuario-update/UsuarioTrayectoriaForm.js","components/usuario/usuario-update/UsuarioTrayectoriaTableRow.js","components/usuario/usuario-update/UsuarioTrayectoriaTable.js","components/usuario/usuario-update/UsuarioTrayectoria.js","components/usuario/usuario-update/UsuarioUpdateScreen.js","routers/PrivateRoute.js","actions/cargoAction.js","routers/AppRouter.js","reducers/cargoReducer.js","reducers/grupoReducer.js","reducers/ramaReducer.js","reducers/seccionReducer.js","store/store.js","reducers/authReducer.js","Librodeoro.js","index.js"],"names":["types","queryFetch","url","token","a","fetch","headers","messageLoadingSwal","Swal","fire","title","text","allowOutsideClick","onBeforeOpen","showLoading","messageSuccessSwal","message","messageSuccessSwalWithFunction","funcOk","icon","showCancelButton","confirmButtonColor","confirmButtonText","then","result","isConfirmed","messageCloseSwal","close","messageConfirmSwal","funcConfirm","cancelButtonColor","cancelButtonText","controlErrorFetch","err","dispatch","funcWarning","validateExecControlErrorFetch","setActiveWarningFunc","status","StatusCodes","FORBIDDEN","startLogoutUser","setInactiveWarningFunc","html","timer","timerProgressBar","willOpen","onClose","clearInterval","timerInterval","undefined","INTERNAL_SERVER_ERROR","msg","messageErrorFetch","activeWarningFunc","localStorage","getItem","setItem","startLoadingGrupos","grupos","resp","OK","json","Promise","resolve","reject","data","length","forEach","elemnt","push","id","nombre","descripcion","catch","startSetGrupos","type","payload","startLoadingRamas","ramas","edadMinima","edadMaxima","idGrupo","grupo","nombreGrupo","setRamas","startLoadingSecciones","secciones","idRama","rama","nombreRama","setSecciones","commandFetch","method","sendObject","body","JSON","stringify","fetchCommand","setLogoutAuth","removeLocalStorageFromAuth","setAuth","auth","setLocalStorageFromAuth","usuario","tipoUsuario","removeItem","NavbarLogout","useDispatch","className","onClick","NavbarOptions","authReducer","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","activeClassName","exact","to","Navbar","useSelector","state","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","handleObjectChange","objectChange","LoginForm","history","useHistory","contrasena","formValues","src","alt","placeholder","onChange","e","preventDefault","response","error","replace","LoginScreen","UsuarioFormCreateButtons","faBackward","CREATED","faSave","UsuarioFormUpdateButtons","setWizard","setUsuario","valid","faForward","UsuarioForm","formType","checkedTipoIntegrante","tipoIntegrante","nombres","apellidos","correo","telefono","checked","direccion","ciudad","confirmContrasena","UsuarioCreateScreen","initialUsuario","PublicRoute","path","component","AnecdotaListadoTableRow","anecdota","nombreSeccion","fechaSuceso","usuarioRegistro","estado","usuarioGestion","AnecdotaListadoTable","page","setPage","totalItems","anecdotas","scope","map","key","idAnecdota","itemClass","linkClass","activePage","itemsCountPerPage","pageRangeDisplayed","totalItemsCount","pageNumber","filterDropById","objectList","filter","obj","filterById","filterRamasByGrupo","filterSeccionesByRama","seccion","filterCargosByGrupoRamaSeccion","cargos","idSeccion","cargo","AnecdotaListadoFilter","setAplicacionFiltros","setFiltros","grupoReducer","ramaReducer","seccionReducer","ramasFilter","setRamasFilter","seccionesFilter","setSeccionesFilter","useEffect","fecha","faSearch","AnecdotaListadoScreen","setTotalItems","setAnecdotas","filtros","aplicacionFiltros","loadAnecdotas","buildPathFilter","concat","fechaInicioAnecdota","fechaFinAnecdota","usuarioFilter","dataGrid","AnecdotaForm","getSelectedGrupo","grupoId","selected","objSendAnecdota","moment","format","AnecdotaScreen","CargoForm","setCargos","cargoActive","setCargoActive","typecargo","typeId","initialCargo","createCargo","handleClean","updateCargo","ACCEPTED","faHandSparkles","CargoTableRowForm","faPenAlt","faTrash","CargoTableForm","loadCargos","CargoScreen","headDescripTypeCargo","setHeadDescriptTypeCargo","descripTypeCargo","setDescripTypeCargo","useParams","ramasReducer","seccionesReducer","style","fontSize","GrupoForm","grupoActive","setGrupoActive","initialGrupo","createGrupo","updateGrupo","GrupoTableRowForm","setGrupos","faTruckLoading","prototype","PropTypes","object","isRequired","func","GrupoTableForm","GrupoScreen","InicioScreen","pingAuth","RamaForm","ramaActive","setRamaActive","initialRama","createRama","updateRama","RamaTableRowForm","RamaTableForm","RamaScreen","SeccionForm","seccionActive","setSeccionActive","initialSeccion","createSeccion","updateSeccion","getSelectedRama","ramaId","SeccionTableRowForm","SeccionTableForm","SeccionScreen","UsuarioTrayectoriaForm","setTrayectorias","initialTrayectoria","cargoReducer","cargosFilter","setCargosFilter","addTrayectoria","trayectorias","nombreCargo","anioIngreso","anioRetiro","faPlusSquare","UsuarioTrayectoriaTableRow","trayectoria","UsuarioTrayectoriaTable","UsuarioTrayectoria","objSendUsuario","UsuarioUpdateScreen","wizard","loadUsuario","PrivateRoute","startSetCargos","AppRouter","isLoggedIn","setIsLoggedIn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","Librodeoro","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1b89e0c.chunk.js","sourcesContent":["export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    gruposLoad: '[Grupos] Load grupos',\r\n    gruposRemove: '[Grupos] Remove grupos',\r\n\r\n    ramasLoad: '[Ramas] Load ramas',\r\n    ramasRemove: '[Ramas] Remove ramas',\r\n\r\n    seccionesLoad: '[Secciones] Load secciones',\r\n    seccionesRemove: '[Secciones] Remove secciones',\r\n\r\n    cargosLoad: '[Cargos] Load cargos',\r\n    cargosRemove: '[Cargos] Remove cargos',\r\n}","\r\nexport const queryFetch= async(url, token) => {\r\n    return await fetch(url, {\r\n      headers: {\r\n        'Authorization': token\r\n      },\r\n    });\r\n  }","import Swal from 'sweetalert2';\r\n\r\nexport const messageLoadingSwal = () => {\r\n    Swal.fire({\r\n        title: 'Cargando...',\r\n        text: 'Espere un momento...',\r\n        allowOutsideClick: false,\r\n        onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n        }\r\n    });\r\n};\r\n\r\nexport const messageErrorSwal = (message) => {\r\n    Swal.fire('Error', message, 'error');\r\n};\r\n\r\nexport const messageSuccessSwal = (message) => {\r\n    Swal.fire('Éxito', message, 'success');\r\n}\r\n\r\nexport const messageSuccessSwalWithFunction = (message, funcOk) => {\r\n    Swal.fire({\r\n      title: 'Éxito',\r\n      text: message,\r\n      icon: 'success',\r\n      showCancelButton: false,\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText: 'OK'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        funcOk();\r\n      }\r\n    })\r\n}\r\n\r\nexport const messageCloseSwal = () => {\r\n    Swal.close();\r\n};\r\n\r\nexport const messageConfirmSwal = (message, funcConfirm) => {\r\n    Swal.fire({\r\n        title: '¿Esta seguro?',\r\n        text: message,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Aceptar',\r\n        cancelButtonText: 'Cancelar'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            funcConfirm();\r\n        }\r\n      })\r\n}\r\n\r\nexport const messageWarningFunction = (message, funcWarning) => {   \r\n    let timerInterval\r\n    Swal.fire({\r\n        title: 'Cuidado!',\r\n        html: message,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        willOpen: () => {\r\n            Swal.showLoading();            \r\n        },\r\n        onClose: () => {\r\n            funcWarning();\r\n            clearInterval(timerInterval)\r\n        }\r\n    });\r\n}","import { StatusCodes } from 'http-status-codes';\r\nimport { startLogoutUser } from '../actions/authAction';\r\nimport { messageWarningFunction, \r\n    messageCloseSwal, \r\n    messageErrorSwal } from '../util/messages';\r\n\r\nexport const controlErrorFetch = (err, dispatch) => {\r\n    if(validateExecControlErrorFetch()){ \r\n        setActiveWarningFunc();   \r\n        messageCloseSwal();\r\n        if(err.status && err.status===StatusCodes.FORBIDDEN){\r\n            messageWarningFunction(\"La session ha expirado, por favor vuelva a iniciar sesion\", \r\n                () => {\r\n                    dispatch(startLogoutUser());\r\n                    setInactiveWarningFunc();\r\n                });\r\n        }else if(err.status != undefined && err.status != StatusCodes.INTERNAL_SERVER_ERROR){\r\n            err.text().then(msg => {\r\n                messageErrorFetch(msg);                                     \r\n            });            \r\n        } else {\r\n            messageErrorFetch(\"Ha ocurrido un error interno por favor comuniquese con el administrador\");\r\n        }\r\n    } \r\n}\r\n\r\nconst messageErrorFetch = (msg) => {\r\n    messageErrorSwal(msg);\r\n    setInactiveWarningFunc();\r\n}\r\n\r\nconst validateExecControlErrorFetch = () =>{\r\n    const activeWarningFunc = localStorage.getItem(\"activeWarningFunc\");\r\n    return activeWarningFunc=== null || activeWarningFunc===\"I\";\r\n}\r\n\r\nconst setActiveWarningFunc = () => {\r\n    localStorage.setItem(\"activeWarningFunc\", \"A\");\r\n}\r\n\r\nexport const setInactiveWarningFunc = () => {\r\n    localStorage.setItem(\"activeWarningFunc\", \"I\");\r\n}\r\n\r\n\r\n","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_GRUPOS } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\nexport const startLoadingGrupos = () => {\r\n    return async(dispatch) => {\r\n        const grupos = [];\r\n\r\n        await queryFetch(`${HOST_URL_BACK}${API_GRUPOS}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        grupos.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            descripcion: elemnt.descripcion,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n        \r\n        dispatch(startSetGrupos(grupos));\r\n    }\r\n};\r\n\r\nexport const startSetGrupos = (grupos) => ({\r\n    type: types.gruposLoad,\r\n    payload: grupos,\r\n});\r\n\r\nexport const startRemoveGrupos = () => ({\r\n    type: types.gruposRemove,\r\n});","export const HOST=\"/\";\r\n","import { HOST } from \"./host\";\r\n\r\n//Method HTTP\r\nexport const METHOD_POST = \"POST\";\r\nexport const METHOD_PUT = \"PUT\";\r\nexport const METHOD_DELETE = \"DELETE\";\r\n\r\n//URL\r\nexport const HOST_URL_BACK= HOST;\r\nexport const API_GRUPOS = \"api/grupo\";\r\nexport const API_CARGOS = \"api/cargo\"; \r\nexport const API_RAMAS = \"api/rama\";\r\nexport const API_SECCIONES = \"api/seccion\";\r\nexport const API_AUTH = \"api/auth\";\r\nexport const API_USUARIOS = \"api/usuario\";\r\nexport const API_ANECDOTA = \"api/anecdota\";\r\n\r\n//Type Cargo\r\nexport const TYPE_CARGO_GRUPO = \"GR\";\r\nexport const TYPE_CARGO_RAMA = \"RA\";\r\nexport const TYPE_CARGO_SECCION = \"SE\";\r\n\r\n//Type Usuario\r\nexport const TYPE_USUARIO_ADMINISTRADOR = \"AD\";\r\nexport const TYPE_USUARIO_INTEGRANTE = \"IN\";\r\n\r\n//Type Integrante\r\nexport const TYPE_INTEGRANTE_ACTIVO = \"AC\";\r\nexport const TYPE_INTEGRANTE_EX_INTEGRANTE = \"EX\";\r\n\r\n//Type Buttons usuario\r\nexport const TYPE_FORM_CREATE=\"CR\";\r\nexport const TYPE_FORM_UPDATE=\"UP\";\r\n\r\n//Type estado anecdota\r\nexport const TYPE_ESTADO_ANECDOTA_PENDIENTE_APROBACION=\"PA\";\r\nexport const TYPE_ESTADO_ANECDOTA_APROBADO=\"AP\";\r\nexport const TYPE_ESTADO_ANECDOTA_RECHAZADO=\"RE\";\r\nexport const TYPE_ESTADO_ANECDOTA_PENDIENTE_MODIFICACION=\"PM\";\r\n","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_RAMAS } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\n\r\nexport const startLoadingRamas = () => {\r\n    return async(dispatch) => {\r\n        const ramas = [];\r\n\r\n        await queryFetch(`${HOST_URL_BACK}${API_RAMAS}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        ramas.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            edadMinima: elemnt.edadMinima,\r\n                            edadMaxima: elemnt.edadMaxima,\r\n                            descripcion: elemnt.descripcion,\r\n                            idGrupo: elemnt.grupo?.id,\r\n                            nombreGrupo: elemnt.grupo?.nombre,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n\r\n        dispatch(setRamas(ramas));\r\n    }\r\n};\r\n\r\nexport const setRamas = (ramas) => ({\r\n    type: types.ramasLoad,\r\n    payload: ramas,\r\n});\r\n\r\nexport const startRemoveRamas = () => ({\r\n    type: types.ramasRemove,\r\n});","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_SECCIONES } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\nexport const startLoadingSecciones = () => {\r\n    return async(dispatch) => {\r\n        const secciones = [];\r\n        await queryFetch(`${HOST_URL_BACK}${API_SECCIONES}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        secciones.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            descripcion: elemnt.descripcion,\r\n                            idRama: elemnt.rama?.id,\r\n                            nombreRama: elemnt.rama?.nombre,\r\n                            idGrupo: elemnt.rama?.grupo?.id,\r\n                            nombreGrupo: elemnt.rama?.grupo?.nombre,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n\r\n        dispatch(setSecciones(secciones));\r\n    }\r\n};\r\n\r\nexport const setSecciones = (secciones) => ({\r\n    type: types.seccionesLoad,\r\n    payload: secciones,\r\n});\r\n\r\nexport const startRemoveSecciones = () => ({\r\n    type: types.seccionesRemove,\r\n});","export const commandFetch= async(url, method, sendObject, token) => {\r\n    const fetchCommand = await fetch(url, {\r\n      method: method,      \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token,\r\n      },\r\n      body: sendObject ? JSON.stringify(sendObject) : undefined\r\n    });  \r\n  \r\n    return fetchCommand;\r\n  }","\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_AUTH, METHOD_POST } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { startRemoveGrupos } from \"./grupoAction\";\r\nimport { startRemoveRamas } from \"./ramaAction\";\r\nimport { startRemoveSecciones } from \"./seccionAction\";\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\nimport { messageLoadingSwal, \r\n    messageCloseSwal } from '../util/messages';\r\nimport { commandFetch } from \"../helpers/commandFetch\";\r\n\r\nexport const startLoginUser = (usuario, contrasena) =>{\r\n    return async(dispatch) => {\r\n        messageLoadingSwal();\r\n        await commandFetch(`${HOST_URL_BACK}${API_AUTH}`, METHOD_POST, {\r\n                 usuario: usuario,\r\n                 contrasena: contrasena     \r\n            })\r\n            .then(response => {\r\n                if(response.status === StatusCodes.OK){\r\n                    response.json().then(auth => {\r\n                        messageCloseSwal();\r\n                        dispatch(setAuth(auth));\r\n                        setLocalStorageFromAuth(auth);\r\n                    });\r\n                } else {\r\n                    controlErrorFetch(response, dispatch);\r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport const setAuthFromLocalStorage = () => ({\r\n    type: types.login,\r\n    payload: {\r\n        usuario: localStorage.getItem('usuario'),\r\n        token: localStorage.getItem('token'),\r\n        tipoUsuario: localStorage.getItem('tipoUsuario'),\r\n    },    \r\n});\r\n\r\nexport const validateLocalStorageAuth = () => {\r\n    return localStorage.getItem('usuario') && \r\n            localStorage.getItem('token') &&\r\n            localStorage.getItem('tipoUsuario')\r\n}\r\n\r\nexport const startLogoutUser = () => {\r\n    return async(dispatch) => {\r\n        dispatch(startRemoveGrupos());\r\n        dispatch(startRemoveRamas());\r\n        dispatch(startRemoveSecciones());\r\n        dispatch(setLogoutAuth());\r\n        removeLocalStorageFromAuth();\r\n    }\r\n}\r\n\r\nconst setLogoutAuth = () => ({    \r\n    type: types.logout,    \r\n}); \r\n\r\nconst setAuth = (auth) => ({\r\n    type: types.login,\r\n    payload: auth,\r\n});\r\n\r\nconst setLocalStorageFromAuth = (auth) => {\r\n    localStorage.setItem('usuario', auth.usuario);\r\n    localStorage.setItem('token', auth.token);\r\n    localStorage.setItem('tipoUsuario', auth.tipoUsuario);\r\n};\r\n\r\nconst removeLocalStorageFromAuth = () => {\r\n    localStorage.removeItem('usuario');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('tipoUsuario');\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogoutUser } from '../../actions/authAction';\r\n\r\nexport const NavbarLogout = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogoutUser());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">           \r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <span className=\"nav-item nav-link text-info\"></span>\r\n\r\n                <button\r\n                    onClick={ handleLogout } \r\n                    className=\"nav-item nav-link btn\">\r\n                    Cerrar Sesion\r\n                </button>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TYPE_USUARIO_ADMINISTRADOR, TYPE_USUARIO_INTEGRANTE } from '../../util/constant';\r\n\r\nexport const NavbarOptions = ({authReducer}) => {\r\n    return (\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n            <ul className=\"navbar-nav\">\r\n                { \r\n                    authReducer.tipoUsuario === TYPE_USUARIO_ADMINISTRADOR &&                   \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Mestros\r\n                            </a>\r\n                            <div className=\"dropdown-menu background_libro_oro\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                <NavLink \r\n                                    activeClassName=\"active\"\r\n                                    className=\"nav-item nav-link\" \r\n                                    exact\r\n                                    to=\"/grupo\">\r\n                                        Grupos\r\n                                </NavLink>\r\n                                <NavLink \r\n                                    activeClassName=\"active\"\r\n                                    className=\"nav-item nav-link\" \r\n                                    exact\r\n                                    to=\"/rama\">\r\n                                        Ramas\r\n                                </NavLink>\r\n                                <NavLink \r\n                                    activeClassName=\"active\"\r\n                                    className=\"nav-item nav-link\" \r\n                                    exact\r\n                                    to=\"/seccion\">\r\n                                        Seccion\r\n                                </NavLink>\r\n                            </div>\r\n                        </li>\r\n                }\r\n\r\n                {\r\n                    authReducer.tipoUsuario === TYPE_USUARIO_INTEGRANTE &&\r\n                    <>                   \r\n                        <li className=\"nav-item dropdown\">\r\n                            <NavLink \r\n                                className=\"nav-item nav-link\"\r\n                                exact\r\n                                to=\"/usuario-update\">\r\n                                   Usuario\r\n                            </NavLink>\r\n                        </li> \r\n                    </>                  \r\n                }\r\n\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Administracion de Anecdotas\r\n                    </a>\r\n                    <div className=\"dropdown-menu background_libro_oro\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                        {\r\n                           authReducer.tipoUsuario === TYPE_USUARIO_INTEGRANTE &&\r\n                           <NavLink \r\n                                activeClassName=\"active\"\r\n                                className=\"nav-item nav-link\" \r\n                                exact\r\n                                to=\"/anecdota\">\r\n                                    Creacion de Anecdotas\r\n                            </NavLink>\r\n                        }\r\n\r\n                        <NavLink \r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\" \r\n                            exact\r\n                            to=\"/anecdota-listado\">\r\n                            Listado de Anecdotas\r\n                        </NavLink>\r\n                                                            \r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { NavbarLogout } from './NavbarLogout';\r\nimport { NavbarOptions } from './NavbarOptions';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const authReducer= useSelector( state => state)?.authReducer;   \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark background_libro_oro\">\r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\">Libro de Oro Scouts</Link>\r\n        {\r\n           authReducer?.usuario &&\r\n                <NavbarOptions authReducer = { authReducer }/>\r\n        }                  \r\n            \r\n        {\r\n            authReducer?.usuario &&\r\n                <NavbarLogout />            \r\n        }\r\n\r\n        </nav>        \r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    const handleObjectChange = (objectChange) => {\r\n        if(objectChange){\r\n            setValues(objectChange);\r\n        }        \r\n    } \r\n\r\n    return [ values, handleInputChange, handleObjectChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLoginUser } from '../../actions/authAction';\r\n\r\nexport const LoginForm = () => {\r\n\r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const [formValues, handleInputChange] = useForm({\r\n        usuario: '',\r\n        contrasena: '',\r\n    });\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLoginUser(formValues.usuario, formValues.contrasena));\r\n    }\r\n\r\n    const handleRedirectUsuario = () => {\r\n        history.replace(\"/usuario-create\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-5 justify-content-center align-items-center\">\r\n            <div className=\"col-sm-6 col-md-4 col-md-offset-4\">                \r\n                <div className=\"account-wall\">\r\n                    \r\n                    <img className=\"profile-img\" src=\"https://lh5.googleusercontent.com/-b0-k99FZlyE/AAAAAAAAAAI/AAAAAAAAAAA/eu7opA4byxI/photo.jpg?sz=120\"\r\n                        alt=\"\"/>\r\n                    \r\n                    <form className=\"form-signin\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Usuario\"\r\n                            name=\"usuario\"\r\n                            value= {formValues.usuario} \r\n                            onChange={handleInputChange} />\r\n                        \r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Contrase&ntilde;a\"\r\n                            name=\"contrasena\"\r\n                            value= {formValues.contrasena} \r\n                            onChange={handleInputChange} />\r\n                        \r\n                        <button onClick={handleLogin} className=\"btn btn-lg btn-primary btn-block\"> Acceder </button>                        \r\n                    </form>\r\n                    \r\n                    <a onClick={handleRedirectUsuario} className=\"text-center new-account\">Crear un Usuario </a>\r\n                \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LoginForm } from './LoginForm'\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div className=\"content h-100 animate__animated animate__slideInLeft\">\r\n            <LoginForm />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { HOST_URL_BACK, \r\n    API_USUARIOS, \r\n    METHOD_POST } from '../../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal, \r\n        messageSuccessSwalWithFunction } from '../../../util/messages';\r\nimport { controlErrorFetch } from '../../../helpers/controlErrorFetch';\r\nimport { commandFetch } from '../../../helpers/commandFetch';\r\n\r\nexport const UsuarioFormCreateButtons = ({formValues}) => {\r\n\r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const goLogin = () => history.replace(\"/auth/login\");\r\n\r\n    const handleFinalizarUsuario = () =>{\r\n        messageLoadingSwal();  \r\n        \r\n        commandFetch(`${HOST_URL_BACK}${API_USUARIOS}`, METHOD_POST, formValues)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwalWithFunction(\"Usuario creado con exito, intente ingresar desde la pantalla login.\", () => {\r\n                        history.replace(`/auth/login`);\r\n                    });                    \r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={goLogin} className=\"btn btn-primary\"><FontAwesomeIcon icon={faBackward}/> Login</button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <button onClick={handleFinalizarUsuario} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faForward } from '@fortawesome/free-solid-svg-icons';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from '../../../helpers/controlErrorFetch';\r\nimport { commandFetch } from '../../../helpers/commandFetch';\r\nimport { useDispatch } from 'react-redux';\r\nimport { messageLoadingSwal, \r\n    messageCloseSwal } from '../../../util/messages';\r\nimport { HOST_URL_BACK, \r\n        API_USUARIOS, \r\n        METHOD_POST } from '../../../util/constant';\r\n       \r\nexport const UsuarioFormUpdateButtons = ({setWizard, setUsuario, formValues, authReducer}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeWizard = () => {\r\n        messageLoadingSwal();\r\n\r\n        commandFetch(`${HOST_URL_BACK}${API_USUARIOS}/validate`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.OK){\r\n                response.json().then((data) => {\r\n                    messageCloseSwal();\r\n                    if(data.valid){\r\n                        setWizard(2);\r\n                        setUsuario({\r\n                            ...formValues\r\n                        });\r\n                    }                \r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <button onClick={changeWizard} className=\"btn btn-primary\">Siguiente <FontAwesomeIcon icon={faForward}/></button>  \r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { UsuarioFormCreateButtons } from './usuario-create/UsuarioFormCreateButtons';\r\nimport { UsuarioFormUpdateButtons } from './usuario-update/UsuarioFormUpdateButtons';\r\nimport { TYPE_FORM_CREATE, \r\n        TYPE_FORM_UPDATE, \r\n        TYPE_INTEGRANTE_ACTIVO, \r\n        TYPE_INTEGRANTE_EX_INTEGRANTE } from '../../util/constant';\r\n\r\nexport const UsuarioForm = ({setWizard, usuario, setUsuario, formType, authReducer}) => {        \r\n    \r\n    const [formValues, handleInputChange] = useForm(usuario);\r\n    const checkedTipoIntegrante = (tipoIntegrante) =>  formValues.tipoIntegrante === tipoIntegrante ? true : false;\r\n        \r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Informacion General</h1>\r\n            <hr/>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Nombres</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombres\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.nombres} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Apellidos</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"apellidos\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.apellidos} \r\n                            onChange={handleInputChange}/>\r\n                    </div>                   \r\n                    <div  className=\"mt-2\">               \r\n                        <label>Correo</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"correo\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.correo} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Telefono</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"telefono\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.telefono} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">\r\n                        <label>Tipo Integrante</label>\r\n                        <div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input \r\n                                    className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"tipoIntegrante\" \r\n                                    value={TYPE_INTEGRANTE_ACTIVO}\r\n                                    onChange={handleInputChange}\r\n                                    checked={checkedTipoIntegrante(TYPE_INTEGRANTE_ACTIVO)} />\r\n                                <label className=\"form-check-label\">Activo</label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input \r\n                                    className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"tipoIntegrante\" \r\n                                    value={TYPE_INTEGRANTE_EX_INTEGRANTE}\r\n                                    onChange={handleInputChange}\r\n                                    checked={checkedTipoIntegrante(TYPE_INTEGRANTE_EX_INTEGRANTE)} />\r\n                                <label className=\"form-check-label\">Ex-integrante</label>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Direccion</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"direccion\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.direccion} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Ciudad</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"ciudad\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.ciudad} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    {\r\n                        formType === TYPE_FORM_CREATE &&\r\n                            <>\r\n                                <div  className=\"mt-2\">               \r\n                                    <label>Usuario</label> \r\n                                    <input \r\n                                        type=\"text\" \r\n                                        name=\"usuario\" \r\n                                        className=\"form-control\"\r\n                                        value= {formValues.usuario} \r\n                                        onChange={handleInputChange}/>\r\n                                </div>\r\n                                <div  className=\"mt-2\">               \r\n                                    <label>Contraseña</label> \r\n                                    <input \r\n                                        type=\"password\" \r\n                                        name=\"contrasena\" \r\n                                        className=\"form-control\"\r\n                                        value= {formValues.contrasena} \r\n                                        onChange={handleInputChange}/>\r\n                                </div>\r\n                                <div  className=\"mt-2\">               \r\n                                    <label>Confirmar Contraseña</label> \r\n                                    <input \r\n                                        type=\"password\" \r\n                                        name=\"confirmContrasena\" \r\n                                        className=\"form-control\"\r\n                                        value= {formValues.confirmContrasena} \r\n                                        onChange={handleInputChange}/>\r\n                                </div>\r\n                            </>\r\n                    }                    \r\n                </div>\r\n            </div>\r\n            {\r\n                formType === TYPE_FORM_CREATE &&\r\n                    <UsuarioFormCreateButtons formValues={formValues}/>\r\n            }\r\n            {\r\n                formType === TYPE_FORM_UPDATE &&\r\n                    <UsuarioFormUpdateButtons \r\n                        setWizard={setWizard} \r\n                        setUsuario={setUsuario} \r\n                        formValues={formValues}\r\n                        authReducer={authReducer} />\r\n            }\r\n                        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TYPE_BUTTONS_CREATE, TYPE_FORM_CREATE } from '../../../util/constant';\r\nimport { UsuarioForm } from '../UsuarioForm';\r\nimport { TYPE_USUARIO_INTEGRANTE } from '../../../util/constant';\r\n\r\nexport const UsuarioCreateScreen = () => {\r\n     \r\n    const initialUsuario = {\r\n        usuario: \"\",\r\n        contrasena: \"\",\r\n        confirmContrasena: \"\",\r\n        nombres: \"\",\r\n        apellidos: \"\",\r\n        tipoIntegrante: \"\",\r\n        correo: \"\",\r\n        telefono: \"\",\r\n        direccion: \"\",\r\n        ciudad: \"\",\r\n        tipoUsuario: TYPE_USUARIO_INTEGRANTE\r\n    }  \r\n\r\n    return (\r\n        <div className=\"container mt-2\">            \r\n            <UsuarioForm \r\n                usuario={initialUsuario} \r\n                formType={TYPE_FORM_CREATE} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { UsuarioCreateScreen } from '../components/usuario/usuario-create/UsuarioCreateScreen';\r\n\r\n\r\nexport const PublicRoute = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                <Route exact path=\"/usuario-create\" component={UsuarioCreateScreen} />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>     \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const AnecdotaListadoTableRow = ({anecdota}) => {\r\n    return (\r\n        <tr>\r\n            <td>{anecdota.nombreGrupo}</td>\r\n            <td>{anecdota.nombreRama}</td>\r\n            <td>{anecdota.nombreGrupo}</td>\r\n            <td>{anecdota.nombreSeccion}</td>\r\n            <td>{anecdota.fechaSuceso}</td>\r\n            <td>{anecdota.usuarioRegistro}</td>\r\n            <td>{anecdota.estado}</td>\r\n            <td>{anecdota.usuarioGestion}</td>\r\n            <td></td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { AnecdotaListadoTableRow } from './AnecdotaListadoTableRow';\r\n\r\n\r\nexport const AnecdotaListadoTable = ({page, setPage, totalItems, anecdotas}) => {\r\n    \r\n    const PAGE_SIZE = 4;\r\n\r\n    const handlePageChange = (pageNumber) =>{\r\n        setPage(pageNumber);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n             <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>\r\n                        <th scope=\"col\">Rama</th>\r\n                        <th scope=\"col\">Seccion</th>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Fecha Suceso</th>\r\n                        <th scope=\"col\">Usuario Registro</th>\r\n                        <th scope=\"col\">Estado</th>\r\n                        <th scope=\"col\">Usuario Gestion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                       anecdotas && anecdotas.map(anecdota => \r\n                            <AnecdotaListadoTableRow key={anecdota.idAnecdota} anecdota={anecdota} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Pagination\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                activePage={page}\r\n                itemsCountPerPage={PAGE_SIZE}\r\n                pageRangeDisplayed={PAGE_SIZE}\r\n                totalItemsCount={totalItems}\r\n                onChange={handlePageChange} />\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const filterDropById = (objectList, id) => {\r\n    return objectList.filter(obj => obj.id !== id);\r\n}\r\n\r\nexport const filterById = (objectList, id) => {\r\n    return objectList.filter(obj => obj.id == id); \r\n}\r\n\r\nexport const filterRamasByGrupo = (ramas, idGrupo) => {\r\n    return ramas.filter(rama => rama.idGrupo == idGrupo);\r\n}\r\n\r\nexport const filterSeccionesByRama = (secciones, idRama) => {\r\n    return secciones.filter(seccion => seccion.idRama == idRama);\r\n}\r\n\r\nexport const filterCargosByGrupoRamaSeccion = (cargos, idGrupo, idRama, idSeccion) => {\r\n    return cargos.filter(cargo => cargo.idGrupo == idGrupo || cargo.idRama == idRama || cargo.idSeccion == idSeccion);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { TYPE_ESTADO_ANECDOTA_APROBADO, \r\n    TYPE_ESTADO_ANECDOTA_PENDIENTE_APROBACION, \r\n    TYPE_ESTADO_ANECDOTA_PENDIENTE_MODIFICACION, \r\n    TYPE_ESTADO_ANECDOTA_RECHAZADO } from '../../util/constant';\r\nimport { filterRamasByGrupo, filterSeccionesByRama } from '../../util/selectors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const AnecdotaListadoFilter = ({setAplicacionFiltros, setFiltros}) => {\r\n\r\n    const { grupoReducer:{grupos}, ramaReducer:{ramas}, seccionReducer:{secciones} } = useSelector( state => state);\r\n    const[ramasFilter, setRamasFilter] = useState([]);\r\n    const[seccionesFilter, setSeccionesFilter] = useState([]);\r\n    const [formValues, handleInputChange, reset] = useForm({});\r\n\r\n    useEffect(() => {\r\n        setRamasFilter(filterRamasByGrupo(ramas, formValues.grupo));\r\n    }, [formValues.grupo]);\r\n\r\n    useEffect(() => {\r\n        setSeccionesFilter(filterSeccionesByRama(secciones, formValues.rama));\r\n    }, [formValues.rama]);\r\n\r\n    const handleFilter = () =>{\r\n        setAplicacionFiltros(true);\r\n        setFiltros({\r\n            ...formValues\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-4\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select\r\n                            name=\"idGrupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione un grupo</option>\r\n                            {                                \r\n                                grupos && grupos.map(grupo => \r\n                                    <option key={grupo.id} \r\n                                            value={grupo.id}>\r\n                                            {grupo.nombre}\r\n                                    </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div>               \r\n                        <label>Rama</label>\r\n                        <select                            \r\n                            name=\"idRama\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una rama</option>\r\n                            {                                \r\n                                ramasFilter && ramasFilter.map(rama => \r\n                                                            <option key={rama.id} \r\n                                                                    value={rama.id} >\r\n                                                                {rama.nombre}\r\n                                                            </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div>               \r\n                        <label>Seccion</label>\r\n                        <select                            \r\n                            name=\"idSeccion\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una seccion</option>\r\n                            {                                \r\n                                seccionesFilter && seccionesFilter.map(seccion => \r\n                                                        <option key={seccion.id} \r\n                                                                value={seccion.id} >\r\n                                                                {seccion.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-6\">\r\n                            <label>Fecha Inicio</label> \r\n                            <input \r\n                                type=\"date\" \r\n                                name=\"fechaInicioAnecdota\" \r\n                                className=\"form-control\"\r\n                                value= {formValues.fecha} \r\n                                onChange={handleInputChange}/>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label>Fecha Fin</label> \r\n                                <input \r\n                                    type=\"date\" \r\n                                    name=\"fechaFinAnecdota\" \r\n                                    className=\"form-control\"\r\n                                    value= {formValues.fecha} \r\n                                    onChange={handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                <label>Estado Anecdota</label>\r\n                    <select                            \r\n                        name=\"estado\"  \r\n                        className=\"form-control\"\r\n                        onChange={handleInputChange}>\r\n                        <option value=\"0\">Seleccione una seccion</option>\r\n                        <option value={TYPE_ESTADO_ANECDOTA_PENDIENTE_APROBACION}>Pendiente aprobacion</option>\r\n                        <option value={TYPE_ESTADO_ANECDOTA_APROBADO}>Aprobado</option>\r\n                        <option value={TYPE_ESTADO_ANECDOTA_RECHAZADO}>Rechazado</option>\r\n                        <option value={TYPE_ESTADO_ANECDOTA_PENDIENTE_MODIFICACION}>Pendiente de modificacion</option>       \r\n                    </select>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-6\">\r\n                            <label>Usuario</label> \r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"usuarioFilter\" \r\n                                className=\"form-control\"\r\n                                value= {formValues.fecha} \r\n                                onChange={handleInputChange}/>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <button onClick={handleFilter} className=\"btn btn-primary mt-4\"><FontAwesomeIcon icon={faSearch}/> Buscar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AnecdotaListadoTable } from './AnecdotaListadoTable';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { queryFetch } from '../../helpers/queryFetch';\r\nimport { HOST_URL_BACK, API_ANECDOTA } from '../../util/constant';\r\nimport { messageLoadingSwal, messageCloseSwal } from '../../util/messages';\r\nimport { AnecdotaListadoFilter } from './AnecdotaListadoFilter';\r\n\r\n\r\nexport const AnecdotaListadoScreen = () => {\r\n  \r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n\r\n    const[page, setPage] = useState(1);\r\n    const[totalItems, setTotalItems] = useState(0);\r\n    const[anecdotas, setAnecdotas] = useState([]);\r\n    const[filtros, setFiltros] = useState({});\r\n    const[aplicacionFiltros, setAplicacionFiltros] = useState(false);\r\n\r\n    useEffect(() => {\r\n      loadAnecdotas();\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n      if(aplicacionFiltros){        \r\n        loadAnecdotas();\r\n        setAplicacionFiltros(false);\r\n      }      \r\n    }, [aplicacionFiltros]);\r\n\r\n\r\n    const buildPathFilter = () =>{\r\n      let path = `?usuarioOwner=${authReducer?.usuario}&typeUsuarioOwner=${authReducer?.tipoUsuario}&page=${page}`;\r\n      filtros.idGrupo &&\r\n                  path.concat(\"&idGrupo=\"+filtros.idGrupo);\r\n      filtros.idRama && \r\n                  path.concat(\"&idRama=\"+filtros.idRama);\r\n      filtros.idSeccion && \r\n                  path.concat(\"&idSeccion=\"+filtros.idRama);\r\n      filtros.fechaInicioAnecdota && \r\n                  path.concat(\"&fechaInicioAnecdota=\"+filtros.fechaInicioAnecdota);\r\n      filtros.fechaFinAnecdota && \r\n                  path.concat(\"&fechaFinAnecdota=\"+filtros.fechaFinAnecdota);\r\n      if(filtros.estado) \r\n        path+=\"&estado=\"+filtros.estado;\r\n      filtros.usuarioFilter && \r\n                  path.concat(\"&usuarioFilter=\"+filtros.usuarioFilter); \r\n                  \r\n      return path;\r\n    }\r\n\r\n    const loadAnecdotas = async() => {\r\n      messageLoadingSwal();\r\n      await queryFetch(`${HOST_URL_BACK}${API_ANECDOTA}${buildPathFilter()}`, authReducer?.token)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                messageCloseSwal();\r\n                setAnecdotas(data.dataGrid);\r\n                setTotalItems(data.totalItems);         \r\n            })\r\n            .catch(err => {            \r\n                controlErrorFetch(err, dispatch);            \r\n            });\r\n    };\r\n\r\n    \r\n    return (\r\n      <div className=\"content animate__animated animate__slideInLeft\">\r\n        <h1>Listado de Anecdotas</h1>\r\n        <hr/>\r\n\r\n        <AnecdotaListadoFilter \r\n            setAplicacionFiltros={setAplicacionFiltros}\r\n            setFiltros={setFiltros}/>\r\n\r\n        <AnecdotaListadoTable \r\n            page={page}\r\n            setPage={setPage} \r\n            totalItems={totalItems} \r\n            anecdotas={anecdotas}/>           \r\n      </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterRamasByGrupo, filterSeccionesByRama } from '../../util/selectors';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { HOST_URL_BACK, \r\n    API_ANECDOTA, \r\n    METHOD_POST } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n    messageCloseSwal, \r\n    messageSuccessSwalWithFunction } from '../../util/messages';\r\n\r\nexport const AnecdotaForm = () => {\r\n\r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const { grupoReducer:{grupos}, ramaReducer:{ramas}, \r\n                seccionReducer:{secciones}, authReducer:{usuario, token} } = useSelector( state => state);\r\n    const[ramasFilter, setRamasFilter] = useState([]);\r\n    const[seccionesFilter, setSeccionesFilter] = useState([]);\r\n    const [formValues, handleInputChange] = useForm({});\r\n\r\n    useEffect(() => {\r\n        setRamasFilter(filterRamasByGrupo(ramas, formValues.grupo));\r\n    }, [formValues.grupo]);\r\n\r\n    useEffect(() => {\r\n        setSeccionesFilter(filterSeccionesByRama(secciones, formValues.rama));\r\n    }, [formValues.rama]);\r\n\r\n    const handleSubmit = () => {\r\n        messageLoadingSwal();\r\n        const objSendAnecdota ={\r\n            ...formValues,\r\n            fecha: moment(formValues.fecha).format(\"DD/MM/YYYY\"),\r\n            usuario: usuario,\r\n        };\r\n        \r\n        commandFetch(`${HOST_URL_BACK}${API_ANECDOTA}`, METHOD_POST, objSendAnecdota, token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwalWithFunction(\"Anecdota creada exitosamente. La anecdota entra en estado <b>PENDIENTE DE APROBACION</b>\", \r\n                    () => {\r\n                        history.replace(`/`);\r\n                    });                    \r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.grupo === grupoId ? 'selected': '';\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-4\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select\r\n                            name=\"grupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>\r\n                            {                                \r\n                                grupos && grupos.map(grupo => \r\n                                    <option key={grupo.id} \r\n                                            value={grupo.id}\r\n                                            selected={getSelectedGrupo(grupo.id)}>\r\n                                            {grupo.nombre}\r\n                                    </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div>               \r\n                        <label>Rama</label>\r\n                        <select                            \r\n                            name=\"rama\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una rama</option>\r\n                            {                                \r\n                                ramasFilter && ramasFilter.map(rama => \r\n                                                            <option key={rama.id} \r\n                                                                    value={rama.id} >\r\n                                                                {rama.nombre}\r\n                                                            </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div>               \r\n                        <label>Seccion</label>\r\n                        <select                            \r\n                            name=\"seccion\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una seccion</option>\r\n                            {                                \r\n                                seccionesFilter && seccionesFilter.map(seccion => \r\n                                                        <option key={seccion.id} \r\n                                                                value={seccion.id} >\r\n                                                                {seccion.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>            \r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <label>Nombre</label> \r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"nombre\" \r\n                        className=\"form-control\"\r\n                        value= {formValues.nombre} \r\n                        onChange={handleInputChange}/>\r\n\r\n                    <label>Fecha</label> \r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"fecha\" \r\n                        className=\"form-control\"\r\n                        value= {formValues.fecha} \r\n                        onChange={handleInputChange}/>   \r\n\r\n                    <label>Descripcion</label>  \r\n                    <textarea \r\n                        name=\"descripcion\" \r\n                        className=\"form-control\" \r\n                        value={formValues.descripcion}\r\n                        onChange={handleInputChange}/>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AnecdotaForm } from './AnecdotaForm'\r\n\r\nexport const AnecdotaScreen = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Anecdota</h1>\r\n            <AnecdotaForm />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faSave, faHandSparkles } from '@fortawesome/free-solid-svg-icons';\r\nimport { HOST_URL_BACK, \r\n        API_CARGOS, \r\n        METHOD_POST, \r\n        METHOD_PUT,\r\n        TYPE_CARGO_GRUPO,\r\n        TYPE_CARGO_RAMA,\r\n        TYPE_CARGO_SECCION } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal, \r\n        messageSuccessSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\n\r\nexport const CargoForm = ({ setCargos, cargoActive, setCargoActive, typecargo, typeId, initialCargo }) => {\r\n\r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const { authReducer } = useSelector( state => state);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialCargo);\r\n\r\n    useEffect(() => {\r\n        if(cargoActive.id){ \r\n            handleObjectChange(cargoActive);\r\n        }\r\n    }, [cargoActive]);\r\n\r\n    const handleBack= () => {\r\n        switch(typecargo){\r\n            case TYPE_CARGO_GRUPO:\r\n                history.replace(`/grupo`);   \r\n                break;\r\n            case TYPE_CARGO_RAMA:\r\n                history.replace(`/rama`);\r\n                break;\r\n            case TYPE_CARGO_SECCION:\r\n                history.replace(`/seccion`);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createCargo();\r\n        } else {\r\n            updateCargo(formValues.id);\r\n        }    \r\n    }    \r\n\r\n    const createCargo = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_CARGOS}/type/${typecargo}/id/${typeId}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(cargo => {\r\n                    setCargos(cargos => [cargo, ...cargos]);                   \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Cargo creado con exito\");\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateCargo = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_CARGOS}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(cargo => {\r\n                    setCargos(cargos => [cargo, ...filterDropById(cargos, cargo.id)]);                    \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Cargo actualizado con exito\");\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setCargoActive(initialCargo);\r\n        reset(initialCargo);        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                \r\n                <label>Nombre</label> \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"nombre\" \r\n                    className=\"form-control\"\r\n                    value= {formValues.nombre} \r\n                    onChange={handleInputChange}/>  \r\n\r\n                <label>Descripcion</label>  \r\n                <textarea \r\n                    name=\"descripcion\" \r\n                    className=\"form-control\" \r\n                    value={formValues.descripcion}\r\n                    onChange={handleInputChange}/>                           \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleBack} className=\"btn btn-primary\"><FontAwesomeIcon icon={faBackward}/> Volver</button>                \r\n                &nbsp;&nbsp;\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { HOST_URL_BACK, \r\n    API_CARGOS, \r\n    METHOD_DELETE } from '../../util/constant';\r\nimport { messageLoadingSwal,\r\n        messageCloseSwal, \r\n        messageSuccessSwal,\r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\n\r\nexport const CargoTableRowForm = ({ cargo, setCargos, setCargoActive }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { authReducer } = useSelector( state => state);\r\n\r\n    const handleSetCargoActive = () => {\r\n        setCargoActive(cargo);\r\n    };\r\n\r\n    const handleDeleteGrupo = () => {\r\n        messageConfirmSwal(`Quiere eliminar el cargo ${cargo.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_CARGOS}/${cargo.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setCargos(cargos => filterDropById(cargos, cargo.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Cargo eliminado con exito\");                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);                \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });\r\n    }\r\n    \r\n    \r\n    return (\r\n        <tr>\r\n            <td>{cargo.nombre}</td>\r\n            <td>{cargo.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetCargoActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteGrupo } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { HOST_URL_BACK, API_CARGOS } from '../../util/constant';\r\nimport { CargoTableRowForm } from './CargoTableRowForm';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { queryFetch } from '../../helpers/queryFetch';\r\nimport { messageLoadingSwal, messageCloseSwal } from '../../util/messages';\r\n\r\n\r\nexport const CargoTableForm = ({ cargos, setCargos, setCargoActive, typecargo, typeId }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n\r\n    const loadCargos = async() => {\r\n        messageLoadingSwal();\r\n        await queryFetch(`${HOST_URL_BACK}${API_CARGOS}/type/${typecargo}/id/${typeId}`, authReducer?.token)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                messageCloseSwal();\r\n                if(data.length > 0){\r\n                    setCargos(data);\r\n                }          \r\n            })\r\n            .catch(err => {            \r\n                controlErrorFetch(err, dispatch);            \r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCargos();\r\n    }, []);    \r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       cargos && cargos.map(cargo => \r\n                            <CargoTableRowForm key={cargo.id} cargo={cargo} setCargos={setCargos} setCargoActive={setCargoActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { TYPE_CARGO_GRUPO, TYPE_CARGO_RAMA, TYPE_CARGO_SECCION } from '../../util/constant';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { CargoForm } from './CargoForm';\r\nimport { CargoTableForm } from './CargoTableForm';\r\nimport { filterById } from '../../util/selectors';\r\n\r\nexport const CargoScreen = () => {\r\n\r\n    const initialCargo = {\r\n        id: 0,\r\n        nombre: '',\r\n        descripcion: ''\r\n    };\r\n    const[cargos, setCargos] = useState([]);\r\n    const[cargoActive, setCargoActive] = useState({});\r\n\r\n    const[headDescripTypeCargo, setHeadDescriptTypeCargo] = useState(\"\");\r\n    const[descripTypeCargo, setDescripTypeCargo] = useState({});\r\n    \r\n    const { typecargo, typeId }= useParams();\r\n\r\n    const grupoReducer = useSelector( state => state)?.grupoReducer;\r\n    const ramasReducer = useSelector( state => state)?.ramaReducer;\r\n    const seccionesReducer = useSelector( state => state)?.seccionReducer;\r\n\r\n    useEffect(() => {\r\n        const grupos = grupoReducer?.grupos\r\n        if(grupos?.length > 0 && typecargo===TYPE_CARGO_GRUPO){\r\n            setHeadDescriptTypeCargo(\"Cargos del grupo: \");\r\n            setDescripTypeCargo(filterById(grupos, typeId)[0]);\r\n        }        \r\n    }, [grupoReducer]);\r\n\r\n    useEffect(() => {\r\n        const ramas = ramasReducer?.ramas;\r\n        if(ramas?.length > 0 && typecargo===TYPE_CARGO_RAMA){\r\n            setHeadDescriptTypeCargo(\"Cargos de la rama: \");\r\n            setDescripTypeCargo(filterById(ramas, typeId)[0]);\r\n        }\r\n    }, [ramasReducer])\r\n\r\n    useEffect(() => {\r\n        const secciones = seccionesReducer?.secciones\r\n        if(secciones?.length > 0 && typecargo===TYPE_CARGO_SECCION){\r\n            setHeadDescriptTypeCargo(\"Cargos de la seccion: \");\r\n            setDescripTypeCargo(filterById(secciones, typeId)[0]);\r\n        }\r\n    }, [seccionesReducer])\r\n    \r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <p style={{fontSize: \"37px\"}}><b>{headDescripTypeCargo}</b> {descripTypeCargo.nombre}</p>\r\n            <hr/>\r\n            \r\n            <CargoForm \r\n                setCargos = { setCargos } \r\n                cargoActive = { cargoActive }\r\n                setCargoActive = { setCargoActive } \r\n                typecargo= { typecargo } \r\n                typeId= { typeId }\r\n                initialCargo= { initialCargo } />\r\n            \r\n            <CargoTableForm \r\n                cargos = { cargos }  \r\n                setCargos = { setCargos } \r\n                setCargoActive = { setCargoActive } \r\n                typecargo={typecargo} \r\n                typeId={typeId} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { HOST_URL_BACK, API_GRUPOS, METHOD_POST, METHOD_PUT } from '../../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { messageLoadingSwal, messageCloseSwal, messageErrorSwal, messageSuccessSwal } from '../../util/messages';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faHandSparkles } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { startLoadingGrupos } from '../../actions/grupoAction';\r\n\r\nexport const GrupoForm = ({ grupoActive, setGrupoActive, initialGrupo }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialGrupo);\r\n    \r\n    useEffect(() => {\r\n        if(grupoActive.id){ \r\n            handleObjectChange(grupoActive);\r\n        }\r\n    }, [grupoActive]);\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createGrupo();\r\n        } else {\r\n            updateGrupo(formValues.id);\r\n        }    \r\n    }\r\n\r\n    const createGrupo = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_GRUPOS}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {                  \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Grupo creado con exito\");\r\n                    dispatch(startLoadingGrupos());\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);            \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateGrupo = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_GRUPOS}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(grupo => {                   \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Grupo actualizado con exito\");\r\n                    dispatch(startLoadingGrupos());\r\n                    handleClean();\r\n                });                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);              \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setGrupoActive(initialGrupo);\r\n        reset(initialGrupo);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                \r\n                <label>Nombre</label> \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"nombre\" \r\n                    className=\"form-control\"\r\n                    value= {formValues.nombre} \r\n                    onChange={handleInputChange}/>  \r\n\r\n                <label>Descripcion</label>  \r\n                <textarea \r\n                    name=\"descripcion\" \r\n                    className=\"form-control\" \r\n                    value={formValues.descripcion}\r\n                    onChange={handleInputChange}/>                           \r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt, faTruckLoading } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingGrupos } from '../../actions/grupoAction';\r\nimport { HOST_URL_BACK, \r\n        API_GRUPOS, \r\n        METHOD_DELETE,\r\n        TYPE_CARGO_GRUPO } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal,\r\n        messageSuccessSwal, \r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const GrupoTableRowForm = ({grupo, setGrupos, setGrupoActive}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const history= useHistory();\r\n\r\n    const handleSetGrupoActive = () => {\r\n        setGrupoActive(grupo);\r\n    };\r\n\r\n    const handleDeleteGrupo = () => {\r\n        messageConfirmSwal(`Quiere eliminar el grupo ${grupo.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_GRUPOS}/${grupo.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setGrupos(grupos => filterDropById(grupos, grupo.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Grupo eliminado con exito\");\r\n                    dispatch(startLoadingGrupos());                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);        \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });       \r\n    }\r\n\r\n    const handleGoCargos = () => {       \r\n        history.replace(`/cargo/type/${TYPE_CARGO_GRUPO}/id/${grupo.id}`);   \r\n    }\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <td>{grupo.nombre}</td>\r\n            <td>{grupo.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetGrupoActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteGrupo } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                    <div className=\"col-2\" onClick={ handleGoCargos } title=\"Ver cargos\"><FontAwesomeIcon icon={faTruckLoading}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nGrupoTableRowForm.prototype = {\r\n    grupo : PropTypes.object.isRequired,\r\n    setGrupos: PropTypes.func.isRequired,\r\n    setGrupoActive: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { GrupoTableRowForm } from './GrupoTableRowForm';\r\n\r\nexport const GrupoTableForm = ({ grupos, setGrupos, setGrupoActive }) => {\r\n\r\n   const { grupoReducer }= useSelector( state => state);\r\n\r\n    useEffect(() => {\r\n        setGrupos(grupoReducer?.grupos);\r\n    }, [grupoReducer]);\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       grupos && grupos.map(grupo => \r\n                            <GrupoTableRowForm key={grupo.id} grupo={grupo} setGrupos={setGrupos} setGrupoActive={setGrupoActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { GrupoForm } from './GrupoForm';\r\nimport { GrupoTableForm } from './GrupoTableForm';\r\n\r\nexport const GrupoScreen = () => {\r\n\r\n    const initialGrupo = {\r\n        id: 0,\r\n        nombre: '',\r\n        descripcion: ''\r\n    };\r\n    const[grupos, setGrupos] = useState([]);\r\n    const[grupoActive, setGrupoActive] = useState({});\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Grupos</h1>\r\n            <hr/>\r\n            <GrupoForm \r\n                grupoActive = { grupoActive } \r\n                setGrupoActive = { setGrupoActive } \r\n                initialGrupo = {initialGrupo} />\r\n            <GrupoTableForm \r\n                grupos = { grupos }  \r\n                setGrupos = { setGrupos } \r\n                setGrupoActive = { setGrupoActive } />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { HOST_URL_BACK, API_AUTH } from '../../util/constant';\r\nimport { queryFetch } from '../../helpers/queryFetch';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const InicioScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n\r\n    useEffect(() => {\r\n        pingAuth();\r\n    }, []);\r\n\r\n    const pingAuth = async() => {\r\n        await queryFetch(`${HOST_URL_BACK}${API_AUTH}`, authReducer?.token)\r\n            .then(resp => {\r\n                if(resp.status != StatusCodes.OK){\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .catch(err => {            \r\n                controlErrorFetch(err, dispatch);            \r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HOST_URL_BACK, METHOD_POST, METHOD_PUT, API_RAMAS } from '../../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHandSparkles, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingRamas } from '../../actions/ramaAction';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal,\r\n        messageSuccessSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const RamaForm = ({ ramaActive, setRamaActive, initialRama }) => {\r\n   \r\n    const dispatch = useDispatch();\r\n    const { grupoReducer:{grupos}, authReducer } = useSelector( state => state);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialRama);\r\n\r\n    useEffect(() => {\r\n        if(ramaActive.id){\r\n            handleObjectChange(ramaActive);\r\n        }\r\n    }, [ramaActive]);\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createRama();\r\n        } else {\r\n            updateRama(formValues.id);\r\n        }    \r\n    }\r\n\r\n    const createRama = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_RAMAS}/grupo/${formValues.idGrupo}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Rama creada con exito\");\r\n                    dispatch(startLoadingRamas());\r\n                    handleClean();\r\n                })                \r\n            } else {                \r\n                controlErrorFetch(response, dispatch);  \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateRama = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_RAMAS}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Rama actualizada con exito\");\r\n                    dispatch(startLoadingRamas());\r\n                    handleClean();\r\n                });                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);      \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setRamaActive(initialRama);\r\n        reset(initialRama);\r\n    }\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.idGrupo === grupoId ? 'selected': '';\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select                            \r\n                            name=\"idGrupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            { (<option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>) }\r\n                            {\r\n                                                                \r\n                                grupos && grupos.map(grupo => \r\n                                                        <option key={grupo.id} \r\n                                                                value={grupo.id} \r\n                                                                selected={getSelectedGrupo(grupo.id)}>\r\n                                                            {grupo.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>  \r\n                    </div>                    \r\n                    <div  className=\"mt-2\">               \r\n                        <label>Nombre</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombre\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.nombre} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label>Edad Minima</label> \r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"edadMinima\" \r\n                                className=\"form-control\"\r\n                                value= {formValues.edadMinima} \r\n                                onChange={handleInputChange}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>Edad Maxima</label> \r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"edadMaxima\" \r\n                                className=\"form-control\"\r\n                                value= {formValues.edadMaxima} \r\n                                onChange={handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <label>Descripcion</label>  \r\n                        <textarea \r\n                            name=\"descripcion\" \r\n                            className=\"form-control\" \r\n                            value={formValues.descripcion}\r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>                          \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt, faTruckLoading } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingRamas } from '../../actions/ramaAction';\r\nimport { HOST_URL_BACK, \r\n        API_RAMAS, \r\n        METHOD_DELETE,\r\n        TYPE_CARGO_RAMA } from '../../util/constant';\r\nimport { messageLoadingSwal,\r\n        messageCloseSwal, \r\n        messageSuccessSwal,\r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const RamaTableRowForm = ({ rama, setRamas, setRamaActive }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const history= useHistory();\r\n\r\n    const handleSetRamaActive = () => {\r\n        setRamaActive(rama);\r\n    };\r\n\r\n    const handleDeleteRama = () => {\r\n        messageConfirmSwal(`Quiere eliminar la rama ${rama.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_RAMAS}/${rama.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setRamas(ramas => filterDropById(ramas, rama.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Rama eliminada con exito\");\r\n                    dispatch(startLoadingRamas());                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);               \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleGoCargos = () => {       \r\n        history.replace(`/cargo/type/${TYPE_CARGO_RAMA}/id/${rama.id}`);   \r\n    }\r\n    \r\n    return (\r\n        <tr>\r\n            <td>{rama.nombreGrupo}</td>\r\n            <td>{rama.nombre}</td>\r\n            <td>{rama.edadMinima}</td>\r\n            <td>{rama.edadMaxima}</td>\r\n            <td>{rama.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetRamaActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteRama } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                    <div className=\"col-2\" onClick={ handleGoCargos } title=\"Ver cargos\"><FontAwesomeIcon icon={faTruckLoading}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nRamaTableRowForm.prototype = {\r\n    rama : PropTypes.object.isRequired,\r\n    setRamas: PropTypes.func.isRequired,\r\n    setRamaActive: PropTypes.func.isRequired,\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { RamaTableRowForm } from './RamaTableRowForm';\r\n\r\nexport const RamaTableForm = ({ramas, setRamas, setRamaActive}) => {\r\n\r\n    const { ramaReducer } = useSelector( state => state);\r\n\r\n    useEffect(() => {\r\n        setRamas(ramaReducer?.ramas);\r\n    }, [ramaReducer]);\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Edad Minima</th>\r\n                        <th scope=\"col\">Edad Maxima</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       ramas && ramas.map(rama => \r\n                            <RamaTableRowForm key={rama.id} rama={rama} setRamas={setRamas} setRamaActive={setRamaActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { RamaForm } from './RamaForm';\r\nimport { RamaTableForm } from './RamaTableForm';\r\n\r\nexport const RamaScreen = () => {\r\n\r\n    const initialRama = {\r\n        id: 0,\r\n        nombre: '',\r\n        edadMinima: 0,\r\n        edadMaxima: 0,\r\n        descripcion: '',\r\n        idGrupo: 0,\r\n        nombreGrupo: ''\r\n    };\r\n    const[ramas, setRamas] = useState([]);\r\n    const[ramaActive, setRamaActive] = useState(initialRama);\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Ramas</h1>\r\n            <hr/>\r\n            <RamaForm \r\n                ramaActive = { ramaActive } \r\n                setRamaActive = {setRamaActive} \r\n                initialRama={initialRama} />\r\n            <RamaTableForm \r\n                ramas = { ramas }  \r\n                setRamas = { setRamas } \r\n                setRamaActive = { setRamaActive } />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HOST_URL_BACK, METHOD_POST, METHOD_PUT, API_SECCIONES } from '../../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { messageLoadingSwal, messageCloseSwal, messageSuccessSwal } from '../../util/messages';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHandSparkles, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingSecciones } from '../../actions/seccionAction';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { filterRamasByGrupo } from '../../util/selectors';\r\n\r\nexport const SeccionForm = ({ seccionActive, setSeccionActive, initialSeccion}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { grupoReducer:{grupos}, ramaReducer:{ramas}, authReducer } = useSelector( state => state);  \r\n    const[ramasFilter, setRamasFilter] = useState([]);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialSeccion);\r\n    \r\n    useEffect(() => {\r\n        setRamasFilter(filterRamasByGrupo(ramas, formValues.idGrupo));\r\n    }, [formValues.idGrupo])\r\n       \r\n    useEffect(() => {\r\n        if(seccionActive.id){ \r\n            handleObjectChange(seccionActive);\r\n        }\r\n    }, [seccionActive]);\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createSeccion();\r\n        } else {\r\n            updateSeccion(formValues.id);\r\n        }    \r\n    }\r\n\r\n    const createSeccion = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_SECCIONES}/rama/${formValues.idRama}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {                  \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Seccion creada con exito\");\r\n                    dispatch(startLoadingSecciones());\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateSeccion = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_SECCIONES}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(() => {                   \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Seccion actualizada con exito\");\r\n                    dispatch(startLoadingSecciones());\r\n                    handleClean();\r\n                });                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setSeccionActive(initialSeccion);\r\n        reset(initialSeccion);\r\n    }\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.idGrupo === grupoId ? 'selected': '';\r\n    const getSelectedRama = (ramaId) =>  formValues && formValues.idRama === ramaId ? 'selected': '';\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select\r\n                            name=\"idGrupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>\r\n                            {                                \r\n                                grupos && grupos.map(grupo => \r\n                                                        <option key={grupo.id} \r\n                                                                value={grupo.id} \r\n                                                                selected={getSelectedGrupo(grupo.id)}>\r\n                                                            {grupo.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>  \r\n                    </div>                    \r\n                    <div  className=\"mt-2\">               \r\n                        <label>Rama</label>\r\n                        <select                            \r\n                            name=\"idRama\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedRama(0)}>Seleccione una rama</option>\r\n                            {                                \r\n                                ramasFilter && ramasFilter.map(rama => \r\n                                                        <option key={rama.id} \r\n                                                                value={rama.id} \r\n                                                                selected={getSelectedRama(rama.id)}>\r\n                                                            {rama.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Nombre</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombre\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.nombre} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <label>Descripcion</label>  \r\n                        <textarea \r\n                            name=\"descripcion\" \r\n                            className=\"form-control\" \r\n                            value={formValues.descripcion}\r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>                          \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt, faTruckLoading } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingSecciones } from '../../actions/seccionAction';\r\nimport { HOST_URL_BACK, \r\n        API_SECCIONES, \r\n        METHOD_DELETE,\r\n        TYPE_CARGO_SECCION } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal,  \r\n        messageSuccessSwal, \r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\n\r\nexport const SeccionTableRowForm = ({ seccion, setSecciones, setSeccionActive }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const history= useHistory();\r\n\r\n    const handleSetSeccionActive = () => {\r\n        setSeccionActive(seccion);\r\n    };\r\n\r\n    const handleDeleteSeccion = () => {\r\n        messageConfirmSwal(`Quiere eliminar la seccion ${seccion.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_SECCIONES}/${seccion.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setSecciones(secciones => filterDropById(secciones, seccion.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Seccion eliminada con exito\");\r\n                    dispatch(startLoadingSecciones());                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);                 \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleGoCargos = () => {       \r\n        history.replace(`/cargo/type/${TYPE_CARGO_SECCION}/id/${seccion.id}`);   \r\n    }    \r\n    \r\n    return (\r\n        <tr>\r\n            <td>{seccion.nombreGrupo}</td>\r\n            <td>{seccion.nombreRama}</td>\r\n            <td>{seccion.nombre}</td>\r\n            <td>{seccion.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetSeccionActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteSeccion } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                    <div className=\"col-2\" onClick={ handleGoCargos } title=\"Ver cargos\"><FontAwesomeIcon icon={faTruckLoading}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nSeccionTableRowForm.prototype = {\r\n    seccion : PropTypes.object.isRequired,\r\n    setSecciones: PropTypes.func.isRequired,\r\n    setSeccionActive: PropTypes.func.isRequired,\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { SeccionTableRowForm } from './SeccionTableRowForm';\r\n\r\nexport const SeccionTableForm = ({ secciones, setSecciones, setSeccionActive }) => {\r\n    \r\n    const seccionReducer= useSelector( state => state)?.seccionReducer;\r\n\r\n    useEffect(() => {\r\n        setSecciones(seccionReducer?.secciones);\r\n    }, [seccionReducer]);\r\n    \r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>                        \r\n                        <th scope=\"col\">Rama</th>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       secciones && secciones.map(seccion => \r\n                            <SeccionTableRowForm \r\n                                key={seccion.id} \r\n                                seccion={seccion} \r\n                                setSecciones={setSecciones} \r\n                                setSeccionActive={setSeccionActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { SeccionForm } from './SeccionForm';\r\nimport { SeccionTableForm } from './SeccionTableForm';\r\n\r\nexport const SeccionScreen = () => {\r\n\r\n    const initialSeccion = {\r\n        id: 0,\r\n        nombre: '',\r\n        descripcion: '',\r\n        idRama: 0,\r\n        nombreRama: '',\r\n        idGrupo: 0,\r\n        nombreGrupo: ''\r\n    }\r\n    const[secciones, setSecciones] = useState([]);\r\n    const[seccionActive, setSeccionActive] = useState({});\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Secciones</h1>\r\n            <hr/>\r\n            <SeccionForm \r\n                seccionActive = { seccionActive } \r\n                setSeccionActive = {setSeccionActive}\r\n                initialSeccion = { initialSeccion } />\r\n            <SeccionTableForm \r\n                secciones = { secciones }  \r\n                setSecciones = { setSecciones } \r\n                setSeccionActive = { setSeccionActive } />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../../helpers/commandFetch';\r\nimport { messageLoadingSwal, messageCloseSwal } from '../../../util/messages';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from '../../../helpers/controlErrorFetch';\r\nimport { filterRamasByGrupo, \r\n        filterSeccionesByRama, \r\n        filterCargosByGrupoRamaSeccion,\r\n        filterById } from '../../../util/selectors';\r\nimport { HOST_URL_BACK, \r\n        API_USUARIOS, \r\n        METHOD_POST } from '../../../util/constant';\r\n\r\n\r\nexport const UsuarioTrayectoriaForm = ({ setTrayectorias, initialTrayectoria, authReducer }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { grupoReducer:{grupos}, ramaReducer:{ramas}, \r\n            seccionReducer:{secciones}, cargoReducer:{cargos} } = useSelector( state => state);\r\n    const[ramasFilter, setRamasFilter] = useState([]);\r\n    const[seccionesFilter, setSeccionesFilter] = useState([]);\r\n    const[cargosFilter, setCargosFilter] = useState([]);\r\n    const [formValues, handleInputChange, reset] = useForm(initialTrayectoria);\r\n\r\n    useEffect(() => {\r\n        setRamasFilter(filterRamasByGrupo(ramas, formValues.grupo));\r\n        setCargosFilter(filterCargosByGrupoRamaSeccion(cargos, formValues.grupo, formValues.rama, formValues.seccion));\r\n    }, [formValues.grupo]);\r\n\r\n    useEffect(() => {\r\n        setSeccionesFilter(filterSeccionesByRama(secciones, formValues.rama));\r\n        setCargosFilter(filterCargosByGrupoRamaSeccion(cargos, formValues.grupo, formValues.rama, formValues.seccion));\r\n    }, [formValues.rama]);\r\n\r\n    useEffect(() => {\r\n        setCargosFilter(filterCargosByGrupoRamaSeccion(cargos, formValues.grupo, formValues.rama, formValues.seccion));\r\n    }, [formValues.seccion]);\r\n\r\n    const handleAddTrayectoria = () => {\r\n        messageLoadingSwal();\r\n\r\n        commandFetch(`${HOST_URL_BACK}${API_USUARIOS}/trayectoria/validate`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.OK){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    addTrayectoria();              \r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    };\r\n\r\n    const addTrayectoria = () =>{\r\n        setTrayectorias(trayectorias => [\r\n            {\r\n                ...formValues,\r\n                id: (trayectorias.length + 1),\r\n                nombreGrupo: filterById(grupos, formValues.grupo)[0]?.nombre,\r\n                nombreRama: filterById(ramas, formValues.rama)[0]?.nombre,\r\n                nombreSeccion: filterById(secciones, formValues.seccion)[0]?.nombre,\r\n                nombreCargo: filterById(cargos, formValues.cargo)[0]?.nombre,\r\n            }, \r\n            ...trayectorias]);\r\n        reset(initialTrayectoria);\r\n    }\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.grupo === grupoId ? 'selected': '';\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select\r\n                            name=\"grupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>\r\n                            {                                \r\n                                grupos && grupos.map(grupo => \r\n                                        <option key={grupo.id} \r\n                                                value={grupo.id}\r\n                                                selected={getSelectedGrupo(grupo.id)}>\r\n                                                {grupo.nombre}\r\n                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Rama</label>\r\n                        <select                            \r\n                            name=\"rama\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una rama</option>\r\n                            {                                \r\n                                ramasFilter && ramasFilter.map(rama => \r\n                                                            <option key={rama.id} \r\n                                                                    value={rama.id} >\r\n                                                                {rama.nombre}\r\n                                                            </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Seccion</label>\r\n                        <select                            \r\n                            name=\"seccion\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una seccion</option>\r\n                            {                                \r\n                                seccionesFilter && seccionesFilter.map(seccion => \r\n                                                            <option key={seccion.id} \r\n                                                                    value={seccion.id} >\r\n                                                                {seccion.nombre}\r\n                                                            </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Cargo</label>\r\n                        <select\r\n                            name=\"cargo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione un grupo</option>\r\n                            {                                \r\n                                cargosFilter && cargosFilter.map(cargo => \r\n                                        <option key={cargo.id} \r\n                                                value={cargo.id}>\r\n                                                {cargo.nombre}\r\n                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>A&ntilde;o Ingreso</label> \r\n                        <input \r\n                            type=\"number\" \r\n                            name=\"anioIngreso\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.anioIngreso} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>A&ntilde;o Retiro</label> \r\n                        <input \r\n                            type=\"number\" \r\n                            name=\"anioRetiro\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.anioRetiro}  \r\n                            onChange={handleInputChange}/>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleAddTrayectoria} className=\"btn btn-primary\"><FontAwesomeIcon icon={faPlusSquare}/> Agregar</button>   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { filterDropById } from '../../../util/selectors';\r\n\r\nexport const UsuarioTrayectoriaTableRow = ({ trayectoria, setTrayectorias }) => {\r\n\r\n    const handleDeleteTrayectoria = () => {\r\n        setTrayectorias(trayectorias => filterDropById(trayectorias, trayectoria.id));\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{trayectoria.nombreGrupo}</td>\r\n            <td>{trayectoria.nombreRama}</td>\r\n            <td>{trayectoria.nombreSeccion}</td>\r\n            <td>{trayectoria.nombreCargo}</td>\r\n            <td>{trayectoria.anioIngreso}</td>\r\n            <td>{trayectoria.anioRetiro}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div onClick={handleDeleteTrayectoria} className=\"col-2\" title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { UsuarioTrayectoriaTableRow } from './UsuarioTrayectoriaTableRow';\r\n\r\nexport const UsuarioTrayectoriaTable = ({ trayectorias, setTrayectorias }) => {\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>\r\n                        <th scope=\"col\">Rama</th>\r\n                        <th scope=\"col\">Seccion</th>\r\n                        <th scope=\"col\">Cargo</th>\r\n                        <th scope=\"col\">A&ntilde;o Ingreso</th>\r\n                        <th scope=\"col\">A&ntilde;o Retiro</th>                        \r\n                        <th scope=\"col\">Retirar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                       trayectorias && trayectorias.map(trayectoria => \r\n                            <UsuarioTrayectoriaTableRow \r\n                                key={trayectoria.id} \r\n                                trayectoria={trayectoria} \r\n                                setTrayectorias={setTrayectorias} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { UsuarioTrayectoriaForm } from './UsuarioTrayectoriaForm';\r\nimport { UsuarioTrayectoriaTable } from './UsuarioTrayectoriaTable';\r\nimport { commandFetch } from '../../../helpers/commandFetch';\r\nimport { HOST_URL_BACK, \r\n    API_USUARIOS, \r\n    METHOD_PUT} from '../../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal, \r\n        messageSuccessSwalWithFunction } from '../../../util/messages';\r\nimport { controlErrorFetch } from '../../../helpers/controlErrorFetch';\r\n\r\nexport const UsuarioTrayectoria = ({setWizard, trayectorias, setTrayectorias, usuario, authReducer }) => {\r\n        \r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const changeWizard = () => {\r\n        setWizard(1);\r\n    }\r\n\r\n    const initialTrayectoria = {\r\n        id: 0,\r\n        grupo: 0,\r\n        nombreGrupo: \"\",\r\n        rama: 0,\r\n        nombreRama: \"\",\r\n        seccion: 0,\r\n        nombreSeccion: \"\",\r\n        cargo: 0,\r\n        nombreCargo: \"\",\r\n        anioIngreso: 0,\r\n        anioRetiro: 0\r\n    };\r\n\r\n    const handleFinalizarUsuario = () =>{\r\n        messageLoadingSwal();\r\n        \r\n        const objSendUsuario ={\r\n            ...usuario,\r\n            trayectoria: trayectorias,\r\n        };        \r\n\r\n        commandFetch(`${HOST_URL_BACK}${API_USUARIOS}`, METHOD_PUT, objSendUsuario, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwalWithFunction(\"Usuario modificado con exito\", () => {\r\n                        history.replace(`/`);\r\n                    });                    \r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Trayectoria</h1>\r\n            \r\n            <UsuarioTrayectoriaForm \r\n                setTrayectorias = {setTrayectorias} \r\n                initialTrayectoria={initialTrayectoria}\r\n                authReducer = {authReducer} />\r\n            \r\n            <UsuarioTrayectoriaTable \r\n                trayectorias={trayectorias} \r\n                setTrayectorias = {setTrayectorias}/>\r\n\r\n            <button onClick={changeWizard} className=\"btn btn-primary\"><FontAwesomeIcon icon={faBackward}/> Anterior</button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <button onClick={handleFinalizarUsuario} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Finalizar</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TYPE_FORM_UPDATE } from '../../../util/constant';\r\nimport { UsuarioForm } from '../UsuarioForm';\r\nimport { UsuarioTrayectoria } from './UsuarioTrayectoria';\r\nimport { HOST_URL_BACK, API_USUARIOS } from '../../../util/constant';\r\nimport { queryFetch } from '../../../helpers/queryFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from '../../../helpers/controlErrorFetch';\r\nimport { messageLoadingSwal, messageCloseSwal } from '../../../util/messages';\r\n\r\nexport const UsuarioUpdateScreen = () => {\r\n       \r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const[trayectorias, setTrayectorias] = useState([]);    \r\n    const[wizard, setWizard] = useState(1);      \r\n    const[usuario, setUsuario] = useState();\r\n    \r\n    useEffect(() => {\r\n        loadUsuario();\r\n    }, []);\r\n\r\n    const loadUsuario = async() => {\r\n        messageLoadingSwal();\r\n        await queryFetch(`${HOST_URL_BACK}${API_USUARIOS}/${authReducer?.usuario}`, authReducer?.token)\r\n            .then(resp => {\r\n                messageCloseSwal();\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data => {\r\n                if(data != undefined ){\r\n                    setUsuario(data);\r\n                    setTrayectorias(data.trayectoria);\r\n                }\r\n            })\r\n            .catch(err => {            \r\n                controlErrorFetch(err, dispatch);            \r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-2\">\r\n            {\r\n                wizard===1 && usuario != undefined && \r\n                    <UsuarioForm \r\n                        setWizard={setWizard} \r\n                        usuario={usuario} \r\n                        setUsuario={setUsuario}\r\n                        formType={TYPE_FORM_UPDATE}\r\n                        authReducer={authReducer} />\r\n            }\r\n            {\r\n                 wizard===2 && usuario != undefined && \r\n                    <UsuarioTrayectoria \r\n                        setWizard={setWizard} \r\n                        trayectorias={trayectorias} \r\n                        setTrayectorias={setTrayectorias}\r\n                        usuario={usuario}\r\n                        authReducer={authReducer} />\r\n            }   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { AnecdotaListadoScreen } from '../components/anecdota-listado/AnecdotaListadoScreen';\r\nimport { AnecdotaScreen } from '../components/anecdota/AnecdotaScreen';\r\nimport { CargoScreen } from '../components/cargo/CargoScreen';\r\nimport { GrupoScreen } from '../components/grupo/GrupoScreen';\r\nimport { InicioScreen } from '../components/inicio/InicioScreen';\r\nimport { RamaScreen } from '../components/rama/RamaScreen';\r\nimport { SeccionScreen } from '../components/seccion/SeccionScreen';\r\nimport { UsuarioUpdateScreen } from '../components/usuario/usuario-update/UsuarioUpdateScreen';\r\n\r\n\r\nexport const PrivateRoute = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/grupo\" component={GrupoScreen} />\r\n                    <Route exact path=\"/rama\" component={RamaScreen} />\r\n                    <Route exact path=\"/seccion\" component={SeccionScreen} />\r\n                    <Route exact path=\"/cargo/type/:typecargo/id/:typeId\" component={CargoScreen} />\r\n                    <Route exact path=\"/anecdota\" component={AnecdotaScreen} />\r\n                    <Route exact path=\"/anecdota-listado\" component={AnecdotaListadoScreen} />\r\n                    <Route exact path=\"/usuario-update\" component={UsuarioUpdateScreen} />\r\n                    <Route exact path=\"/\" component={InicioScreen} />   \r\n                    <Redirect to=\"/\" />   \r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_CARGOS } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\nexport const startLoadingCargos = () => {\r\n    return async(dispatch) => {\r\n        const cargos = [];\r\n\r\n        await queryFetch(`${HOST_URL_BACK}${API_CARGOS}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        cargos.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            descripcion: elemnt.descripcion,\r\n                            idGrupo: elemnt.grupo?.id,\r\n                            idRama: elemnt.rama?.id,\r\n                            idSeccion: elemnt.seccion?.id,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n        \r\n        dispatch(startSetCargos(cargos));\r\n    }\r\n};\r\n\r\nexport const startSetCargos = (cargos) => ({\r\n    type: types.cargosLoad,\r\n    payload: cargos,\r\n});\r\n\r\nexport const startRemoveCargos = () => ({\r\n    type: types.cargosRemove,\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { setAuthFromLocalStorage, validateLocalStorageAuth } from '../actions/authAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLoadingGrupos } from '../actions/grupoAction';\r\nimport { startLoadingRamas } from '../actions/ramaAction';\r\nimport { startLoadingSecciones } from '../actions/seccionAction';\r\nimport { setInactiveWarningFunc } from '../helpers/controlErrorFetch';\r\nimport { startLoadingCargos } from '../actions/cargoAction';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(authReducer?.usuario){\r\n            setIsLoggedIn(true);                        \r\n            setInactiveWarningFunc();\r\n        }else if(validateLocalStorageAuth()){\r\n            dispatch(setAuthFromLocalStorage());\r\n        }else {\r\n            setIsLoggedIn(false); \r\n        }\r\n        dispatch(startLoadingGrupos());\r\n        dispatch(startLoadingRamas());\r\n        dispatch(startLoadingSecciones());\r\n        dispatch(startLoadingCargos());\r\n    }, [authReducer, setIsLoggedIn]);\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Navbar/>\r\n\r\n                <div>\r\n                    <Switch>\r\n\r\n                        {\r\n                            !isLoggedIn &&\r\n                                <PublicRoute />\r\n                        }\r\n\r\n                        {\r\n                            isLoggedIn && \r\n                                <PrivateRoute />\r\n                        }\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                        \r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    cargos: []\r\n}\r\n\r\nexport const cargoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.cargosLoad:\r\n            return {\r\n                ...state,\r\n                cargos: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.cargosRemove:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    grupos: []\r\n}\r\n\r\nexport const grupoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.gruposLoad:\r\n            return {\r\n                ...state,\r\n                grupos: [ ...action.payload ]\r\n            }\r\n\r\n        case types.gruposRemove:\r\n            return {}        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    ramas: []\r\n}\r\n\r\nexport const ramaReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.ramasLoad:\r\n            return {\r\n                ...state,\r\n                ramas: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.ramasRemove:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    secciones: []\r\n}\r\n\r\nexport const seccionReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.seccionesLoad:\r\n            return {\r\n                ...state,\r\n                secciones: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.seccionesRemove:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { cargoReducer } from '../reducers/cargoReducer';\r\nimport { grupoReducer } from '../reducers/grupoReducer';\r\nimport { ramaReducer } from '../reducers/ramaReducer';\r\nimport { seccionReducer } from '../reducers/seccionReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    authReducer: authReducer,\r\n    grupoReducer: grupoReducer,\r\n    ramaReducer: ramaReducer,\r\n    seccionReducer: seccionReducer,\r\n    cargoReducer: cargoReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","\r\nimport { types } from '../types/types';\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                usuario: action.payload.usuario,\r\n                token: action.payload.token,\r\n                tipoUsuario: action.payload.tipoUsuario \r\n            }\r\n        case types.logout:\r\n                return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const Librodeoro = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Librodeoro } from './Librodeoro';\r\nimport './styles/styles.css'\r\n\r\nReactDOM.render(\r\n  <Librodeoro/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}