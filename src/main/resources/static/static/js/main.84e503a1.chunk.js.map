{"version":3,"sources":["helpers/commandFetch.js","types/types.js","helpers/queryFetch.js","util/messages.js","helpers/controlErrorFetch.js","actions/grupoAction.js","util/host.js","util/constant.js","actions/ramaAction.js","actions/seccionAction.js","actions/authAction.js","components/ui/NavbarLogout.js","components/ui/NavbarOptions.js","components/ui/Navbar.js","hooks/useForm.js","components/login/LoginForm.js","components/login/LoginScreen.js","components/usuario/UsuarioForm.js","util/selectors.js","components/usuario/UsuarioTrayectoriaForm.js","components/usuario/UsuarioTrayectoriaTableRow.js","components/usuario/UsuarioTrayectoriaTable.js","components/usuario/UsuarioTrayectoria.js","components/usuario/UsuarioScreen.js","routers/PublicRoute.js","components/cargo/CargoForm.js","components/cargo/CargoTableRowForm.js","components/cargo/CargoTableForm.js","components/cargo/CargoScreen.js","components/grupo/GrupoForm.js","components/grupo/GrupoTableRowForm.js","components/grupo/GrupoTableForm.js","components/grupo/GrupoScreen.js","components/rama/RamaForm.js","components/rama/RamaTableRowForm.js","components/rama/RamaTableForm.js","components/rama/RamaScreen.js","components/seccion/SeccionForm.js","components/seccion/SeccionTableRowForm.js","components/seccion/SeccionTableForm.js","components/seccion/SeccionScreen.js","routers/PrivateRoute.js","actions/cargoAction.js","routers/AppRouter.js","reducers/cargoReducer.js","reducers/grupoReducer.js","reducers/ramaReducer.js","reducers/seccionReducer.js","store/store.js","reducers/authReducer.js","Librodeoro.js","index.js"],"names":["commandFetch","url","method","sendObject","token","a","fetch","headers","body","JSON","stringify","undefined","fetchCommand","types","queryFetch","messageLoadingSwal","Swal","fire","title","text","allowOutsideClick","onBeforeOpen","showLoading","messageErrorSwal","message","messageSuccessSwal","messageCloseSwal","close","messageConfirmSwal","funcConfirm","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","controlErrorFetch","err","dispatch","funcWarning","validateExecControlErrorFetch","setActiveWarningFunc","status","StatusCodes","FORBIDDEN","startLogoutUser","setInactiveWarningFunc","html","timer","timerProgressBar","willOpen","onClose","clearInterval","timerInterval","msg","activeWarningFunc","localStorage","getItem","setItem","startLoadingGrupos","grupos","resp","OK","json","Promise","resolve","reject","data","length","forEach","elemnt","push","id","nombre","descripcion","catch","startSetGrupos","type","payload","startLoadingRamas","ramas","edadMinima","edadMaxima","idGrupo","grupo","nombreGrupo","setRamas","startLoadingSecciones","secciones","idRama","rama","nombreRama","setSecciones","setLogoutAuth","removeLocalStorageFromAuth","setAuth","auth","setLocalStorageFromAuth","usuario","tipoUsuario","removeItem","NavbarLogout","useDispatch","className","onClick","NavbarOptions","authReducer","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","activeClassName","exact","to","Navbar","useSelector","state","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","handleObjectChange","objectChange","LoginForm","history","useHistory","contrasena","formValues","src","alt","placeholder","onChange","e","preventDefault","response","error","replace","LoginScreen","UsuarioForm","setWizard","setUsuario","checkedTipoIntegrante","tipoIntegrante","nombres","apellidos","correo","telefono","checked","direccion","ciudad","confirmContrasena","faBackward","faForward","filterDropById","objectList","filter","obj","filterById","filterRamasByGrupo","filterCargosByGrupoRamaSeccion","cargos","idSeccion","cargo","UsuarioTrayectoriaForm","setTrayectorias","initialTrayectoria","grupoReducer","ramaReducer","seccionReducer","cargoReducer","ramasFilter","setRamasFilter","seccionesFilter","setSeccionesFilter","cargosFilter","setCargosFilter","useEffect","seccion","filterSeccionesByRama","getSelectedGrupo","grupoId","selected","map","key","anioIngreso","anioRetiro","trayectorias","nombreSeccion","nombreCargo","faPlusSquare","UsuarioTrayectoriaTableRow","trayectoria","faTrash","UsuarioTrayectoriaTable","scope","UsuarioTrayectoria","objSendUsuario","CREATED","funcOk","faSave","UsuarioScreen","wizard","initialUsuario","PublicRoute","path","component","CargoForm","setCargos","cargoActive","setCargoActive","typecargo","typeId","initialCargo","createCargo","handleClean","updateCargo","ACCEPTED","faHandSparkles","CargoTableRowForm","faPenAlt","CargoTableForm","loadCargos","CargoScreen","headDescripTypeCargo","setHeadDescriptTypeCargo","descripTypeCargo","setDescripTypeCargo","useParams","ramasReducer","seccionesReducer","style","fontSize","GrupoForm","grupoActive","setGrupoActive","initialGrupo","createGrupo","updateGrupo","GrupoTableRowForm","setGrupos","faTruckLoading","prototype","PropTypes","object","isRequired","func","GrupoTableForm","GrupoScreen","RamaForm","ramaActive","setRamaActive","initialRama","createRama","updateRama","RamaTableRowForm","RamaTableForm","RamaScreen","SeccionForm","seccionActive","setSeccionActive","initialSeccion","createSeccion","updateSeccion","getSelectedRama","ramaId","SeccionTableRowForm","SeccionTableForm","SeccionScreen","PrivateRoute","startSetCargos","AppRouter","isLoggedIn","setIsLoggedIn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","Librodeoro","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e503a1.chunk.js","sourcesContent":["\r\nexport const commandFetch= async(url, method, sendObject, token) => {\r\n  const fetchCommand = await fetch(url, {\r\n    method: method,      \r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    },\r\n    body: sendObject ? JSON.stringify(sendObject) : undefined\r\n  });  \r\n\r\n  return fetchCommand;\r\n}","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    gruposLoad: '[Grupos] Load grupos',\r\n    gruposRemove: '[Grupos] Remove grupos',\r\n\r\n    ramasLoad: '[Ramas] Load ramas',\r\n    ramasRemove: '[Ramas] Remove ramas',\r\n\r\n    seccionesLoad: '[Secciones] Load secciones',\r\n    seccionesRemove: '[Secciones] Remove secciones',\r\n\r\n    cargosLoad: '[Cargos] Load cargos',\r\n    cargosRemove: '[Cargos] Remove cargos',\r\n}","\r\nexport const queryFetch= async(url, token) => {\r\n    return await fetch(url, {\r\n      headers: {\r\n        'Authorization': token\r\n      },\r\n    });\r\n  }","import Swal from 'sweetalert2';\r\n\r\nexport const messageLoadingSwal = () => {\r\n    Swal.fire({\r\n        title: 'Cargando...',\r\n        text: 'Espere un momento...',\r\n        allowOutsideClick: false,\r\n        onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n        }\r\n    });\r\n};\r\n\r\nexport const messageErrorSwal = (message) => {\r\n    Swal.fire('Error', message, 'error');\r\n};\r\n\r\nexport const messageSuccessSwal = (message) => {\r\n    Swal.fire('Éxito', message, 'success');\r\n}\r\n\r\nexport const messageSuccessSwalWithFunction = (message, funcOk) => {\r\n    Swal.fire({\r\n      title: 'Éxito',\r\n      text: message,\r\n      icon: 'success',\r\n      showCancelButton: false,\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText: 'OK'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        funcOk();\r\n      }\r\n    })\r\n}\r\n\r\nexport const messageCloseSwal = () => {\r\n    Swal.close();\r\n};\r\n\r\nexport const messageConfirmSwal = (message, funcConfirm) => {\r\n    Swal.fire({\r\n        title: '¿Esta seguro?',\r\n        text: message,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Aceptar',\r\n        cancelButtonText: 'Cancelar'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            funcConfirm();\r\n        }\r\n      })\r\n}\r\n\r\nexport const messageWarningFunction = (message, funcWarning) => {   \r\n    let timerInterval\r\n    Swal.fire({\r\n        title: 'Cuidado!',\r\n        html: message,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        willOpen: () => {\r\n            Swal.showLoading();            \r\n        },\r\n        onClose: () => {\r\n            funcWarning();\r\n            clearInterval(timerInterval)\r\n        }\r\n    });\r\n}","import { StatusCodes } from 'http-status-codes';\r\nimport { startLogoutUser } from '../actions/authAction';\r\nimport { messageWarningFunction, \r\n    messageCloseSwal, \r\n    messageErrorSwal } from '../util/messages';\r\n\r\nexport const controlErrorFetch = (err, dispatch) => {\r\n    if(validateExecControlErrorFetch()){ \r\n        setActiveWarningFunc();   \r\n        messageCloseSwal();\r\n        if(err.status && err.status===StatusCodes.FORBIDDEN){\r\n            messageWarningFunction(\"La session ha expirado, por favor vuelva a iniciar sesion\", \r\n                () => {\r\n                    dispatch(startLogoutUser());\r\n                    setInactiveWarningFunc();\r\n                });\r\n        }else if(err.status){\r\n            err.text().then(msg => {\r\n                messageErrorSwal(msg);\r\n                setInactiveWarningFunc();                                       \r\n            });\r\n        } else {\r\n            messageErrorSwal(err);\r\n            setInactiveWarningFunc();\r\n        }\r\n    } \r\n}\r\n\r\nconst validateExecControlErrorFetch = () =>{\r\n    const activeWarningFunc = localStorage.getItem(\"activeWarningFunc\");\r\n    return activeWarningFunc=== null || activeWarningFunc===\"I\";\r\n}\r\n\r\nconst setActiveWarningFunc = () => {\r\n    localStorage.setItem(\"activeWarningFunc\", \"A\");\r\n}\r\n\r\nexport const setInactiveWarningFunc = () => {\r\n    localStorage.setItem(\"activeWarningFunc\", \"I\");\r\n}\r\n\r\n\r\n","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_GRUPOS } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\nexport const startLoadingGrupos = () => {\r\n    return async(dispatch) => {\r\n        const grupos = [];\r\n\r\n        await queryFetch(`${HOST_URL_BACK}${API_GRUPOS}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        grupos.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            descripcion: elemnt.descripcion,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n        \r\n        dispatch(startSetGrupos(grupos));\r\n    }\r\n};\r\n\r\nexport const startSetGrupos = (grupos) => ({\r\n    type: types.gruposLoad,\r\n    payload: grupos,\r\n});\r\n\r\nexport const startRemoveGrupos = () => ({\r\n    type: types.gruposRemove,\r\n});","export const HOST=\"/\";","import { HOST } from \"./host\";\r\n\r\n//Method HTTP\r\nexport const METHOD_POST = \"POST\";\r\nexport const METHOD_PUT = \"PUT\";\r\nexport const METHOD_DELETE = \"DELETE\";\r\n\r\n//URL\r\nexport const HOST_URL_BACK= HOST;\r\nexport const API_GRUPOS = \"api/grupo\";\r\nexport const API_CARGOS = \"api/cargo\"; \r\nexport const API_RAMAS = \"api/rama\";\r\nexport const API_SECCIONES = \"api/seccion\";\r\nexport const API_AUTH = \"api/auth\";\r\nexport const API_USUARIOS = \"api/usuario\";\r\n\r\n\r\n//Type Cargo\r\nexport const TYPE_CARGO_GRUPO = \"GR\";\r\nexport const TYPE_CARGO_RAMA = \"RA\";\r\nexport const TYPE_CARGO_SECCION = \"SE\";\r\n\r\n//Type Usuario\r\nexport const TYPE_USUARIO_ADMINISTRADOR = \"AD\";\r\nexport const TYPE_USUARIO_INTEGRANTE = \"IN\";\r\n\r\n//Type Integrante\r\nexport const TYPE_INTEGRANTE_ACTIVO = \"AC\";\r\nexport const TYPE_INTEGRANTE_EX_INTEGRANTE = \"EX\";\r\n\r\n","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_RAMAS } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\n\r\nexport const startLoadingRamas = () => {\r\n    return async(dispatch) => {\r\n        const ramas = [];\r\n\r\n        await queryFetch(`${HOST_URL_BACK}${API_RAMAS}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        ramas.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            edadMinima: elemnt.edadMinima,\r\n                            edadMaxima: elemnt.edadMaxima,\r\n                            descripcion: elemnt.descripcion,\r\n                            idGrupo: elemnt.grupo?.id,\r\n                            nombreGrupo: elemnt.grupo?.nombre,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n\r\n        dispatch(setRamas(ramas));\r\n    }\r\n};\r\n\r\nexport const setRamas = (ramas) => ({\r\n    type: types.ramasLoad,\r\n    payload: ramas,\r\n});\r\n\r\nexport const startRemoveRamas = () => ({\r\n    type: types.ramasRemove,\r\n});","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_SECCIONES } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\nexport const startLoadingSecciones = () => {\r\n    return async(dispatch) => {\r\n        const secciones = [];\r\n        await queryFetch(`${HOST_URL_BACK}${API_SECCIONES}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        secciones.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            descripcion: elemnt.descripcion,\r\n                            idRama: elemnt.rama?.id,\r\n                            nombreRama: elemnt.rama?.nombre,\r\n                            idGrupo: elemnt.rama?.grupo?.id,\r\n                            nombreGrupo: elemnt.rama?.grupo?.nombre,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n\r\n        dispatch(setSecciones(secciones));\r\n    }\r\n};\r\n\r\nexport const setSecciones = (secciones) => ({\r\n    type: types.seccionesLoad,\r\n    payload: secciones,\r\n});\r\n\r\nexport const startRemoveSecciones = () => ({\r\n    type: types.seccionesRemove,\r\n});","import { commandFetch } from \"../helpers/commandFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_AUTH, METHOD_POST } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { startRemoveGrupos } from \"./grupoAction\";\r\nimport { startRemoveRamas } from \"./ramaAction\";\r\nimport { startRemoveSecciones } from \"./seccionAction\";\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\nimport { messageLoadingSwal, \r\n    messageCloseSwal } from '../util/messages';\r\n\r\nexport const startLoginUser = (usuario, contrasena) =>{\r\n    return async(dispatch) => {\r\n        messageLoadingSwal();\r\n        await commandFetch(`${HOST_URL_BACK}${API_AUTH}`, METHOD_POST, {\r\n                 usuario: usuario,\r\n                 contrasena: contrasena     \r\n            })\r\n            .then(response => {\r\n                if(response.status === StatusCodes.OK){\r\n                    response.json().then(auth => {\r\n                        messageCloseSwal();\r\n                        dispatch(setAuth(auth));\r\n                        setLocalStorageFromAuth(auth);\r\n                    });\r\n                } else {\r\n                    controlErrorFetch(response, dispatch);\r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport const setAuthFromLocalStorage = () => ({\r\n    type: types.login,\r\n    payload: {\r\n        usuario: localStorage.getItem('usuario'),\r\n        token: localStorage.getItem('token'),\r\n        tipoUsuario: localStorage.getItem('tipoUsuario'),\r\n    },    \r\n});\r\n\r\nexport const validateLocalStorageAuth = () => {\r\n    return localStorage.getItem('usuario') && \r\n            localStorage.getItem('token') &&\r\n            localStorage.getItem('tipoUsuario')\r\n}\r\n\r\nexport const startLogoutUser = () => {\r\n    return async(dispatch) => {\r\n        dispatch(startRemoveGrupos());\r\n        dispatch(startRemoveRamas());\r\n        dispatch(startRemoveSecciones());\r\n        dispatch(setLogoutAuth());\r\n        removeLocalStorageFromAuth();\r\n    }\r\n}\r\n\r\nconst setLogoutAuth = () => ({    \r\n    type: types.logout,    \r\n}); \r\n\r\nconst setAuth = (auth) => ({\r\n    type: types.login,\r\n    payload: auth,\r\n});\r\n\r\nconst setLocalStorageFromAuth = (auth) => {\r\n    localStorage.setItem('usuario', auth.usuario);\r\n    localStorage.setItem('token', auth.token);\r\n    localStorage.setItem('tipoUsuario', auth.tipoUsuario);\r\n};\r\n\r\nconst removeLocalStorageFromAuth = () => {\r\n    localStorage.removeItem('usuario');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('tipoUsuario');\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogoutUser } from '../../actions/authAction';\r\n\r\nexport const NavbarLogout = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogoutUser());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">           \r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <span className=\"nav-item nav-link text-info\"></span>\r\n\r\n                <button\r\n                    onClick={ handleLogout } \r\n                    className=\"nav-item nav-link btn\">\r\n                    Cerrar Sesion\r\n                </button>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TYPE_USUARIO_ADMINISTRADOR, TYPE_USUARIO_INTEGRANTE } from '../../util/constant';\r\n\r\nexport const NavbarOptions = ({authReducer}) => {\r\n    return (\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n            <ul className=\"navbar-nav\">\r\n                { \r\n                    authReducer.tipoUsuario === TYPE_USUARIO_ADMINISTRADOR &&                   \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Mestros\r\n                            </a>\r\n                            <div className=\"dropdown-menu background_libro_oro\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                <NavLink \r\n                                    activeClassName=\"active\"\r\n                                    className=\"nav-item nav-link\" \r\n                                    exact\r\n                                    to=\"/grupo\">\r\n                                        Grupos\r\n                                </NavLink>\r\n                                <NavLink \r\n                                    activeClassName=\"active\"\r\n                                    className=\"nav-item nav-link\" \r\n                                    exact\r\n                                    to=\"/rama\">\r\n                                        Ramas\r\n                                </NavLink>\r\n                                <NavLink \r\n                                    activeClassName=\"active\"\r\n                                    className=\"nav-item nav-link\" \r\n                                    exact\r\n                                    to=\"/seccion\">\r\n                                        Seccion\r\n                                </NavLink>\r\n                            </div>\r\n                        </li>\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { NavbarLogout } from './NavbarLogout';\r\nimport { NavbarOptions } from './NavbarOptions';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const authReducer= useSelector( state => state)?.authReducer;   \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark background_libro_oro\">\r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\">Libro de Oro Scouts</Link>\r\n        {\r\n           authReducer?.usuario &&\r\n                <NavbarOptions authReducer = { authReducer }/>\r\n        }                  \r\n            \r\n        {\r\n            authReducer?.usuario &&\r\n                <NavbarLogout />            \r\n        }\r\n\r\n        </nav>        \r\n    )\r\n}\r\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    }\n\n    const handleObjectChange = (objectChange) => {\n        if(objectChange){\n            setValues(objectChange);\n        }        \n    } \n\n    return [ values, handleInputChange, handleObjectChange, reset ];\n\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLoginUser } from '../../actions/authAction';\r\n\r\nexport const LoginForm = () => {\r\n\r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm({\r\n        usuario: '',\r\n        contrasena: '',\r\n    });\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLoginUser(formValues.usuario, formValues.contrasena));\r\n    }\r\n\r\n    const handleRedirectUsuario = () => {\r\n        history.replace(\"/usuario\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-5 justify-content-center align-items-center\">\r\n            <div className=\"col-sm-6 col-md-4 col-md-offset-4\">                \r\n                <div className=\"account-wall\">\r\n                    \r\n                    <img className=\"profile-img\" src=\"https://lh5.googleusercontent.com/-b0-k99FZlyE/AAAAAAAAAAI/AAAAAAAAAAA/eu7opA4byxI/photo.jpg?sz=120\"\r\n                        alt=\"\"/>\r\n                    \r\n                    <form className=\"form-signin\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Usuario\"\r\n                            name=\"usuario\"\r\n                            value= {formValues.usuario} \r\n                            onChange={handleInputChange} />\r\n                        \r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Contrase&ntilde;a\"\r\n                            name=\"contrasena\"\r\n                            value= {formValues.contrasena} \r\n                            onChange={handleInputChange} />\r\n                        \r\n                        <button onClick={handleLogin} className=\"btn btn-lg btn-primary btn-block\"> Acceder </button>                        \r\n                    </form>\r\n                    \r\n                    <a onClick={handleRedirectUsuario} className=\"text-center new-account\">Crear un Usuario </a>\r\n                \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LoginForm } from './LoginForm'\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div className=\"content h-100 animate__animated animate__slideInLeft\">\r\n            <LoginForm />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { TYPE_INTEGRANTE_ACTIVO, TYPE_INTEGRANTE_EX_INTEGRANTE } from '../../util/constant';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const UsuarioForm = ({setWizard, usuario, setUsuario}) => {\r\n        \r\n    const history= useHistory();\r\n    const [formValues, handleInputChange] = useForm(usuario);\r\n\r\n    const changeWizard = () => {\r\n        setWizard(2);\r\n        setUsuario({\r\n            ...formValues\r\n        });\r\n    }\r\n\r\n    const checkedTipoIntegrante = (tipoIntegrante) =>  formValues.tipoIntegrante === tipoIntegrante ? true : false;\r\n\r\n    const goLogin = () => history.replace(\"/auth/login\");\r\n    \r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Informacion General</h1>\r\n            <hr/>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Nombres</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombres\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.nombres} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Apellidos</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"apellidos\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.apellidos} \r\n                            onChange={handleInputChange}/>\r\n                    </div>                   \r\n                    <div  className=\"mt-2\">               \r\n                        <label>Correo</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"correo\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.correo} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Telefono</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"telefono\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.telefono} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">\r\n                        <label>Tipo Integrante</label>\r\n                        <div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input \r\n                                    className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"tipoIntegrante\" \r\n                                    value={TYPE_INTEGRANTE_ACTIVO}\r\n                                    onChange={handleInputChange}\r\n                                    checked={checkedTipoIntegrante(TYPE_INTEGRANTE_ACTIVO)} />\r\n                                <label className=\"form-check-label\">Activo</label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input \r\n                                    className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"tipoIntegrante\" \r\n                                    value={TYPE_INTEGRANTE_EX_INTEGRANTE}\r\n                                    onChange={handleInputChange}\r\n                                    checked={checkedTipoIntegrante(TYPE_INTEGRANTE_EX_INTEGRANTE)} />\r\n                                <label className=\"form-check-label\">Ex-integrante</label>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Direccion</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"direccion\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.direccion} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Ciudad</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"ciudad\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.ciudad} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Usuario</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"usuario\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.usuario} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Contraseña</label> \r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"contrasena\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.contrasena} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Confirmar Contraseña</label> \r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"confirmContrasena\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.confirmContrasena} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={goLogin} className=\"btn btn-primary\"><FontAwesomeIcon icon={faBackward}/> Login</button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <button onClick={changeWizard} className=\"btn btn-primary\">Siguiente <FontAwesomeIcon icon={faForward}/></button>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const filterDropById = (objectList, id) => {\r\n    return objectList.filter(obj => obj.id !== id);\r\n}\r\n\r\nexport const filterById = (objectList, id) => {\r\n    return objectList.filter(obj => obj.id == id); \r\n}\r\n\r\nexport const filterRamasByGrupo = (ramas, idGrupo) => {\r\n    return ramas.filter(rama => rama.idGrupo == idGrupo);\r\n}\r\n\r\nexport const filterSeccionesByRama = (secciones, idRama) => {\r\n    return secciones.filter(seccion => seccion.idRama == idRama);\r\n}\r\n\r\nexport const filterCargosByGrupoRamaSeccion = (cargos, idGrupo, idRama, idSeccion) => {\r\n    return cargos.filter(cargo => cargo.idGrupo == idGrupo || cargo.idRama == idRama || cargo.idSeccion == idSeccion);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { filterRamasByGrupo, \r\n        filterSeccionesByRama, \r\n        filterCargosByGrupoRamaSeccion,\r\n        filterById } from '../../util/selectors';\r\n\r\nexport const UsuarioTrayectoriaForm = ({ setTrayectorias, initialTrayectoria }) => {\r\n\r\n    const { grupoReducer:{grupos}, ramaReducer:{ramas}, \r\n            seccionReducer:{secciones}, cargoReducer:{cargos} } = useSelector( state => state);\r\n    const[ramasFilter, setRamasFilter] = useState([]);\r\n    const[seccionesFilter, setSeccionesFilter] = useState([]);\r\n    const[cargosFilter, setCargosFilter] = useState([]);\r\n    const [formValues, handleInputChange, reset] = useForm(initialTrayectoria);\r\n\r\n    useEffect(() => {\r\n        setRamasFilter(filterRamasByGrupo(ramas, formValues.grupo));\r\n        setCargosFilter(filterCargosByGrupoRamaSeccion(cargos, formValues.grupo, formValues.rama, formValues.seccion));\r\n    }, [formValues.grupo]);\r\n\r\n    useEffect(() => {\r\n        setSeccionesFilter(filterSeccionesByRama(secciones, formValues.rama));\r\n        setCargosFilter(filterCargosByGrupoRamaSeccion(cargos, formValues.grupo, formValues.rama, formValues.seccion));\r\n    }, [formValues.rama]);\r\n\r\n    useEffect(() => {\r\n        setCargosFilter(filterCargosByGrupoRamaSeccion(cargos, formValues.grupo, formValues.rama, formValues.seccion));\r\n    }, [formValues.seccion]);\r\n\r\n    const handleAddTrayectoria = () => {\r\n        setTrayectorias(trayectorias => [\r\n             {\r\n                ...formValues,\r\n                id: (trayectorias.length + 1),\r\n                nombreGrupo: filterById(grupos, formValues.grupo)[0]?.nombre,\r\n                nombreRama: filterById(ramas, formValues.rama)[0]?.nombre,\r\n                nombreSeccion: filterById(secciones, formValues.seccion)[0]?.nombre,\r\n                nombreCargo: filterById(cargos, formValues.cargo)[0]?.nombre,\r\n            }, \r\n            ...trayectorias]);\r\n        reset(initialTrayectoria);\r\n    };\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.grupo === grupoId ? 'selected': '';\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select\r\n                            name=\"grupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>\r\n                            {                                \r\n                                grupos && grupos.map(grupo => \r\n                                        <option key={grupo.id} \r\n                                                value={grupo.id}\r\n                                                selected={getSelectedGrupo(grupo.id)}>\r\n                                                {grupo.nombre}\r\n                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Rama</label>\r\n                        <select                            \r\n                            name=\"rama\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una rama</option>\r\n                            {                                \r\n                                ramasFilter && ramasFilter.map(rama => \r\n                                                            <option key={rama.id} \r\n                                                                    value={rama.id} >\r\n                                                                {rama.nombre}\r\n                                                            </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>Seccion</label>\r\n                        <select                            \r\n                            name=\"seccion\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione una seccion</option>\r\n                            {                                \r\n                                seccionesFilter && seccionesFilter.map(seccion => \r\n                                                            <option key={seccion.id} \r\n                                                                    value={seccion.id} >\r\n                                                                {seccion.nombre}\r\n                                                            </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Cargo</label>\r\n                        <select\r\n                            name=\"cargo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\">Seleccione un grupo</option>\r\n                            {                                \r\n                                cargosFilter && cargosFilter.map(cargo => \r\n                                        <option key={cargo.id} \r\n                                                value={cargo.id}>\r\n                                                {cargo.nombre}\r\n                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>A&ntilde;o Ingreso</label> \r\n                        <input \r\n                            type=\"number\" \r\n                            name=\"anioIngreso\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.anioIngreso} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div  className=\"mt-2\">               \r\n                        <label>A&ntilde;o Retiro</label> \r\n                        <input \r\n                            type=\"number\" \r\n                            name=\"anioRetiro\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.anioRetiro}  \r\n                            onChange={handleInputChange}/>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleAddTrayectoria} className=\"btn btn-primary\"><FontAwesomeIcon icon={faPlusSquare}/> Agregar</button>   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { filterDropById } from '../../util/selectors';\r\n\r\nexport const UsuarioTrayectoriaTableRow = ({ trayectoria, setTrayectorias }) => {\r\n\r\n    const handleDeleteTrayectoria = () => {\r\n        setTrayectorias(trayectorias => filterDropById(trayectorias, trayectoria.id));\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{trayectoria.nombreGrupo}</td>\r\n            <td>{trayectoria.nombreRama}</td>\r\n            <td>{trayectoria.nombreSeccion}</td>\r\n            <td>{trayectoria.nombreCargo}</td>\r\n            <td>{trayectoria.anioIngreso}</td>\r\n            <td>{trayectoria.anioRetiro}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div onClick={handleDeleteTrayectoria} className=\"col-2\" title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { UsuarioTrayectoriaTableRow } from './UsuarioTrayectoriaTableRow';\r\n\r\nexport const UsuarioTrayectoriaTable = ({ trayectorias, setTrayectorias }) => {\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>\r\n                        <th scope=\"col\">Rama</th>\r\n                        <th scope=\"col\">Seccion</th>\r\n                        <th scope=\"col\">Cargo</th>\r\n                        <th scope=\"col\">A&ntilde;o Ingreso</th>\r\n                        <th scope=\"col\">A&ntilde;o Retiro</th>                        \r\n                        <th scope=\"col\">Retirar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                       trayectorias && trayectorias.map(trayectoria => \r\n                            <UsuarioTrayectoriaTableRow \r\n                                key={trayectoria.id} \r\n                                trayectoria={trayectoria} \r\n                                setTrayectorias={setTrayectorias} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { UsuarioTrayectoriaForm } from './UsuarioTrayectoriaForm';\r\nimport { UsuarioTrayectoriaTable } from './UsuarioTrayectoriaTable';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { HOST_URL_BACK, \r\n    API_USUARIOS, \r\n    METHOD_POST,\r\n    TYPE_USUARIO_INTEGRANTE } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal, \r\n        messageSuccessSwalWithFunction } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const UsuarioTrayectoria = ({setWizard, trayectorias, setTrayectorias, usuario }) => {\r\n        \r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const changeWizard = () => {\r\n        setWizard(1);\r\n    }\r\n\r\n    const initialTrayectoria = {\r\n        id: 0,\r\n        grupo: 0,\r\n        nombreGrupo: \"\",\r\n        rama: 0,\r\n        nombreRama: \"\",\r\n        seccion: 0,\r\n        nombreSeccion: \"\",\r\n        cargo: 0,\r\n        nombreCargo: \"\",\r\n        anioIngreso: 0,\r\n        anioRetiro: 0\r\n    };\r\n\r\n    const handleFinalizarUsuario = () =>{\r\n        messageLoadingSwal();\r\n        \r\n        const objSendUsuario ={\r\n            ...usuario,\r\n            tipoUsuario: TYPE_USUARIO_INTEGRANTE,\r\n            trayectoria: trayectorias,\r\n        };        \r\n\r\n        commandFetch(`${HOST_URL_BACK}${API_USUARIOS}`, METHOD_POST, objSendUsuario)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwalWithFunction(\"Usuario creado con exito, intente ingresar desde la pantalla login.\", () => {\r\n                        history.replace(`/auth/login`);\r\n                    });                    \r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Trayectoria</h1>\r\n            \r\n            <UsuarioTrayectoriaForm \r\n                setTrayectorias = {setTrayectorias} \r\n                initialTrayectoria={initialTrayectoria} />\r\n            \r\n            <UsuarioTrayectoriaTable \r\n                trayectorias={trayectorias} \r\n                setTrayectorias = {setTrayectorias}/>\r\n\r\n            <button onClick={changeWizard} className=\"btn btn-primary\"><FontAwesomeIcon icon={faBackward}/> Anterior</button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <button onClick={handleFinalizarUsuario} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Finalizar</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { UsuarioForm } from './UsuarioForm';\r\nimport { UsuarioTrayectoria } from './UsuarioTrayectoria';\r\n\r\n\r\nexport const UsuarioScreen = () => {\r\n       \r\n    const[trayectorias, setTrayectorias] = useState([]);    \r\n    const[wizard, setWizard] = useState(1);\r\n    const initialUsuario = {\r\n        usuario: \"\",\r\n        contrasena: \"\",\r\n        confirmContrasena: \"\",\r\n        nombres: \"\",\r\n        apellidos: \"\",\r\n        tipoIntegrante: \"\",\r\n        correo: \"\",\r\n        telefono: \"\",\r\n        direccion: \"\",\r\n        ciudad: \"\",\r\n        tipoUsuario: \"\",\r\n        trayectoria: trayectorias\r\n    }  \r\n    const[usuario, setUsuario] = useState(initialUsuario); \r\n\r\n    return (\r\n        <div className=\"container mt-2\">\r\n            {\r\n                wizard===1 && \r\n                    <UsuarioForm \r\n                        setWizard={setWizard} \r\n                        usuario={usuario} \r\n                        setUsuario={setUsuario} />\r\n            }\r\n            {\r\n                 wizard===2 && \r\n                    <UsuarioTrayectoria \r\n                        setWizard={setWizard} \r\n                        trayectorias={trayectorias} \r\n                        setTrayectorias={setTrayectorias}\r\n                        usuario={usuario} />\r\n            }   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { UsuarioScreen } from '../components/usuario/UsuarioScreen';\n\n\nexport const PublicRoute = () => {\n    return (\n        <>\n            <Switch>\n                <Route exact path=\"/auth/login\" component={LoginScreen} />\n                <Route exact path=\"/usuario\" component={UsuarioScreen} />\n                <Redirect to=\"/auth/login\" />\n            </Switch>     \n        </>\n    )\n}\n\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faSave, faHandSparkles } from '@fortawesome/free-solid-svg-icons';\r\nimport { HOST_URL_BACK, \r\n        API_CARGOS, \r\n        METHOD_POST, \r\n        METHOD_PUT,\r\n        TYPE_CARGO_GRUPO,\r\n        TYPE_CARGO_RAMA,\r\n        TYPE_CARGO_SECCION } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal, \r\n        messageSuccessSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\n\r\nexport const CargoForm = ({ setCargos, cargoActive, setCargoActive, typecargo, typeId, initialCargo }) => {\r\n\r\n    const history= useHistory();\r\n    const dispatch = useDispatch();\r\n    const { authReducer } = useSelector( state => state);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialCargo);\r\n\r\n    useEffect(() => {\r\n        if(cargoActive.id){ \r\n            handleObjectChange(cargoActive);\r\n        }\r\n    }, [cargoActive]);\r\n\r\n    const handleBack= () => {\r\n        switch(typecargo){\r\n            case TYPE_CARGO_GRUPO:\r\n                history.replace(`/grupo`);   \r\n                break;\r\n            case TYPE_CARGO_RAMA:\r\n                history.replace(`/rama`);\r\n                break;\r\n            case TYPE_CARGO_SECCION:\r\n                history.replace(`/seccion`);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createCargo();\r\n        } else {\r\n            updateCargo(formValues.id);\r\n        }    \r\n    }    \r\n\r\n    const createCargo = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_CARGOS}/type/${typecargo}/id/${typeId}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(cargo => {\r\n                    setCargos(cargos => [cargo, ...cargos]);                   \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Cargo creado con exito\");\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateCargo = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_CARGOS}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(cargo => {\r\n                    setCargos(cargos => [cargo, ...filterDropById(cargos, cargo.id)]);                    \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Cargo actualizado con exito\");\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setCargoActive(initialCargo);\r\n        reset(initialCargo);        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                \r\n                <label>Nombre</label> \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"nombre\" \r\n                    className=\"form-control\"\r\n                    value= {formValues.nombre} \r\n                    onChange={handleInputChange}/>  \r\n\r\n                <label>Descripcion</label>  \r\n                <textarea \r\n                    name=\"descripcion\" \r\n                    className=\"form-control\" \r\n                    value={formValues.descripcion}\r\n                    onChange={handleInputChange}/>                           \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleBack} className=\"btn btn-primary\"><FontAwesomeIcon icon={faBackward}/> Volver</button>                \r\n                &nbsp;&nbsp;\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { HOST_URL_BACK, \r\n    API_CARGOS, \r\n    METHOD_DELETE } from '../../util/constant';\r\nimport { messageLoadingSwal,\r\n        messageCloseSwal, \r\n        messageSuccessSwal,\r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\n\r\nexport const CargoTableRowForm = ({ cargo, setCargos, setCargoActive }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { authReducer } = useSelector( state => state);\r\n\r\n    const handleSetCargoActive = () => {\r\n        setCargoActive(cargo);\r\n    };\r\n\r\n    const handleDeleteGrupo = () => {\r\n        messageConfirmSwal(`Quiere eliminar el cargo ${cargo.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_CARGOS}/${cargo.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setCargos(cargos => filterDropById(cargos, cargo.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Cargo eliminado con exito\");                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);                \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });\r\n    }\r\n    \r\n    \r\n    return (\r\n        <tr>\r\n            <td>{cargo.nombre}</td>\r\n            <td>{cargo.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetCargoActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteGrupo } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { HOST_URL_BACK, API_CARGOS } from '../../util/constant';\r\nimport { CargoTableRowForm } from './CargoTableRowForm';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { queryFetch } from '../../helpers/queryFetch';\r\n\r\n\r\nexport const CargoTableForm = ({ cargos, setCargos, setCargoActive, typecargo, typeId }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n\r\n    const loadCargos = async() => {\r\n        await queryFetch(`${HOST_URL_BACK}${API_CARGOS}/type/${typecargo}/id/${typeId}`, authReducer?.token)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    setCargos(data);\r\n                }          \r\n            })\r\n            .catch(err => {            \r\n                controlErrorFetch(err, dispatch);            \r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCargos();\r\n    }, []);    \r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       cargos && cargos.map(cargo => \r\n                            <CargoTableRowForm key={cargo.id} cargo={cargo} setCargos={setCargos} setCargoActive={setCargoActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { TYPE_CARGO_GRUPO, TYPE_CARGO_RAMA, TYPE_CARGO_SECCION } from '../../util/constant';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { CargoForm } from './CargoForm';\r\nimport { CargoTableForm } from './CargoTableForm';\r\nimport { filterById } from '../../util/selectors';\r\n\r\nexport const CargoScreen = () => {\r\n\r\n    const initialCargo = {\r\n        id: 0,\r\n        nombre: '',\r\n        descripcion: ''\r\n    };\r\n    const[cargos, setCargos] = useState([]);\r\n    const[cargoActive, setCargoActive] = useState({});\r\n\r\n    const[headDescripTypeCargo, setHeadDescriptTypeCargo] = useState(\"\");\r\n    const[descripTypeCargo, setDescripTypeCargo] = useState({});\r\n    \r\n    const { typecargo, typeId }= useParams();\r\n\r\n    const grupoReducer = useSelector( state => state)?.grupoReducer;\r\n    const ramasReducer = useSelector( state => state)?.ramaReducer;\r\n    const seccionesReducer = useSelector( state => state)?.seccionReducer;\r\n\r\n    useEffect(() => {\r\n        const grupos = grupoReducer?.grupos\r\n        if(grupos.length > 0 && typecargo===TYPE_CARGO_GRUPO){\r\n            setHeadDescriptTypeCargo(\"Cargos del grupo: \");\r\n            setDescripTypeCargo(filterById(grupos, typeId)[0]);\r\n        }        \r\n    }, [grupoReducer]);\r\n\r\n    useEffect(() => {\r\n        const ramas = ramasReducer?.ramas;\r\n        if(ramas.length > 0 && typecargo===TYPE_CARGO_RAMA){\r\n            setHeadDescriptTypeCargo(\"Cargos de la rama: \");\r\n            setDescripTypeCargo(filterById(ramas, typeId)[0]);\r\n        }\r\n    }, [ramasReducer])\r\n\r\n    useEffect(() => {\r\n        const secciones = seccionesReducer?.secciones\r\n        if(secciones.length > 0 && typecargo===TYPE_CARGO_SECCION){\r\n            setHeadDescriptTypeCargo(\"Cargos de la seccion: \");\r\n            setDescripTypeCargo(filterById(secciones, typeId)[0]);\r\n        }\r\n    }, [seccionesReducer])\r\n    \r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <p style={{fontSize: \"37px\"}}><b>{headDescripTypeCargo}</b> {descripTypeCargo.nombre}</p>\r\n            <hr/>\r\n            \r\n            <CargoForm \r\n                setCargos = { setCargos } \r\n                cargoActive = { cargoActive }\r\n                setCargoActive = { setCargoActive } \r\n                typecargo= { typecargo } \r\n                typeId= { typeId }\r\n                initialCargo= { initialCargo } />\r\n            \r\n            <CargoTableForm \r\n                cargos = { cargos }  \r\n                setCargos = { setCargos } \r\n                setCargoActive = { setCargoActive } \r\n                typecargo={typecargo} \r\n                typeId={typeId} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { HOST_URL_BACK, API_GRUPOS, METHOD_POST, METHOD_PUT } from '../../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { messageLoadingSwal, messageCloseSwal, messageErrorSwal, messageSuccessSwal } from '../../util/messages';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faHandSparkles } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { startLoadingGrupos } from '../../actions/grupoAction';\r\n\r\nexport const GrupoForm = ({ grupoActive, setGrupoActive, initialGrupo }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialGrupo);\r\n    \r\n    useEffect(() => {\r\n        if(grupoActive.id){ \r\n            handleObjectChange(grupoActive);\r\n        }\r\n    }, [grupoActive]);\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createGrupo();\r\n        } else {\r\n            updateGrupo(formValues.id);\r\n        }    \r\n    }\r\n\r\n    const createGrupo = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_GRUPOS}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {                  \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Grupo creado con exito\");\r\n                    dispatch(startLoadingGrupos());\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);            \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateGrupo = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_GRUPOS}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(grupo => {                   \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Grupo actualizado con exito\");\r\n                    dispatch(startLoadingGrupos());\r\n                    handleClean();\r\n                });                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);              \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setGrupoActive(initialGrupo);\r\n        reset(initialGrupo);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                \r\n                <label>Nombre</label> \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"nombre\" \r\n                    className=\"form-control\"\r\n                    value= {formValues.nombre} \r\n                    onChange={handleInputChange}/>  \r\n\r\n                <label>Descripcion</label>  \r\n                <textarea \r\n                    name=\"descripcion\" \r\n                    className=\"form-control\" \r\n                    value={formValues.descripcion}\r\n                    onChange={handleInputChange}/>                           \r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt, faTruckLoading } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingGrupos } from '../../actions/grupoAction';\r\nimport { HOST_URL_BACK, \r\n        API_GRUPOS, \r\n        METHOD_DELETE,\r\n        TYPE_CARGO_GRUPO } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal,\r\n        messageSuccessSwal, \r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const GrupoTableRowForm = ({grupo, setGrupos, setGrupoActive}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const history= useHistory();\r\n\r\n    const handleSetGrupoActive = () => {\r\n        setGrupoActive(grupo);\r\n    };\r\n\r\n    const handleDeleteGrupo = () => {\r\n        messageConfirmSwal(`Quiere eliminar el grupo ${grupo.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_GRUPOS}/${grupo.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setGrupos(grupos => filterDropById(grupos, grupo.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Grupo eliminado con exito\");\r\n                    dispatch(startLoadingGrupos());                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);        \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });       \r\n    }\r\n\r\n    const handleGoCargos = () => {       \r\n        history.replace(`/cargo/type/${TYPE_CARGO_GRUPO}/id/${grupo.id}`);   \r\n    }\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <td>{grupo.nombre}</td>\r\n            <td>{grupo.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetGrupoActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteGrupo } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                    <div className=\"col-2\" onClick={ handleGoCargos } title=\"Ver cargos\"><FontAwesomeIcon icon={faTruckLoading}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nGrupoTableRowForm.prototype = {\r\n    grupo : PropTypes.object.isRequired,\r\n    setGrupos: PropTypes.func.isRequired,\r\n    setGrupoActive: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { GrupoTableRowForm } from './GrupoTableRowForm';\r\n\r\nexport const GrupoTableForm = ({ grupos, setGrupos, setGrupoActive }) => {\r\n\r\n   const { grupoReducer }= useSelector( state => state);\r\n\r\n    useEffect(() => {\r\n        setGrupos(grupoReducer?.grupos);\r\n    }, [grupoReducer]);\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       grupos && grupos.map(grupo => \r\n                            <GrupoTableRowForm key={grupo.id} grupo={grupo} setGrupos={setGrupos} setGrupoActive={setGrupoActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { GrupoForm } from './GrupoForm';\r\nimport { GrupoTableForm } from './GrupoTableForm';\r\n\r\nexport const GrupoScreen = () => {\r\n\r\n    const initialGrupo = {\r\n        id: 0,\r\n        nombre: '',\r\n        descripcion: ''\r\n    };\r\n    const[grupos, setGrupos] = useState([]);\r\n    const[grupoActive, setGrupoActive] = useState({});\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Grupos</h1>\r\n            <hr/>\r\n            <GrupoForm \r\n                grupoActive = { grupoActive } \r\n                setGrupoActive = { setGrupoActive } \r\n                initialGrupo = {initialGrupo} />\r\n            <GrupoTableForm \r\n                grupos = { grupos }  \r\n                setGrupos = { setGrupos } \r\n                setGrupoActive = { setGrupoActive } />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HOST_URL_BACK, METHOD_POST, METHOD_PUT, API_RAMAS } from '../../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHandSparkles, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingRamas } from '../../actions/ramaAction';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal,\r\n        messageSuccessSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const RamaForm = ({ ramaActive, setRamaActive, initialRama }) => {\r\n   \r\n    const dispatch = useDispatch();\r\n    const { grupoReducer:{grupos}, authReducer } = useSelector( state => state);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialRama);\r\n\r\n    useEffect(() => {\r\n        if(ramaActive.id){\r\n            handleObjectChange(ramaActive);\r\n        }\r\n    }, [ramaActive]);\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createRama();\r\n        } else {\r\n            updateRama(formValues.id);\r\n        }    \r\n    }\r\n\r\n    const createRama = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_RAMAS}/grupo/${formValues.idGrupo}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Rama creada con exito\");\r\n                    dispatch(startLoadingRamas());\r\n                    handleClean();\r\n                })                \r\n            } else {                \r\n                controlErrorFetch(response, dispatch);  \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateRama = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_RAMAS}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(() => {\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Rama actualizada con exito\");\r\n                    dispatch(startLoadingRamas());\r\n                    handleClean();\r\n                });                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);      \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setRamaActive(initialRama);\r\n        reset(initialRama);\r\n    }\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.idGrupo === grupoId ? 'selected': '';\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select                            \r\n                            name=\"idGrupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            { (<option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>) }\r\n                            {\r\n                                                                \r\n                                grupos && grupos.map(grupo => \r\n                                                        <option key={grupo.id} \r\n                                                                value={grupo.id} \r\n                                                                selected={getSelectedGrupo(grupo.id)}>\r\n                                                            {grupo.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>  \r\n                    </div>                    \r\n                    <div  className=\"mt-2\">               \r\n                        <label>Nombre</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombre\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.nombre} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label>Edad Minima</label> \r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"edadMinima\" \r\n                                className=\"form-control\"\r\n                                value= {formValues.edadMinima} \r\n                                onChange={handleInputChange}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>Edad Maxima</label> \r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"edadMaxima\" \r\n                                className=\"form-control\"\r\n                                value= {formValues.edadMaxima} \r\n                                onChange={handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <label>Descripcion</label>  \r\n                        <textarea \r\n                            name=\"descripcion\" \r\n                            className=\"form-control\" \r\n                            value={formValues.descripcion}\r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>                          \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt, faTruckLoading } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingRamas } from '../../actions/ramaAction';\r\nimport { HOST_URL_BACK, \r\n        API_RAMAS, \r\n        METHOD_DELETE,\r\n        TYPE_CARGO_RAMA } from '../../util/constant';\r\nimport { messageLoadingSwal,\r\n        messageCloseSwal, \r\n        messageSuccessSwal,\r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\nexport const RamaTableRowForm = ({ rama, setRamas, setRamaActive }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const history= useHistory();\r\n\r\n    const handleSetRamaActive = () => {\r\n        setRamaActive(rama);\r\n    };\r\n\r\n    const handleDeleteRama = () => {\r\n        messageConfirmSwal(`Quiere eliminar la rama ${rama.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_RAMAS}/${rama.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setRamas(ramas => filterDropById(ramas, rama.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Rama eliminada con exito\");\r\n                    dispatch(startLoadingRamas());                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);               \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleGoCargos = () => {       \r\n        history.replace(`/cargo/type/${TYPE_CARGO_RAMA}/id/${rama.id}`);   \r\n    }\r\n    \r\n    return (\r\n        <tr>\r\n            <td>{rama.nombreGrupo}</td>\r\n            <td>{rama.nombre}</td>\r\n            <td>{rama.edadMinima}</td>\r\n            <td>{rama.edadMaxima}</td>\r\n            <td>{rama.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetRamaActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteRama } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                    <div className=\"col-2\" onClick={ handleGoCargos } title=\"Ver cargos\"><FontAwesomeIcon icon={faTruckLoading}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nRamaTableRowForm.prototype = {\r\n    rama : PropTypes.object.isRequired,\r\n    setRamas: PropTypes.func.isRequired,\r\n    setRamaActive: PropTypes.func.isRequired,\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { RamaTableRowForm } from './RamaTableRowForm';\r\n\r\nexport const RamaTableForm = ({ramas, setRamas, setRamaActive}) => {\r\n\r\n    const { ramaReducer } = useSelector( state => state);\r\n\r\n    useEffect(() => {\r\n        setRamas(ramaReducer?.ramas);\r\n    }, [ramaReducer]);\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Edad Minima</th>\r\n                        <th scope=\"col\">Edad Maxima</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       ramas && ramas.map(rama => \r\n                            <RamaTableRowForm key={rama.id} rama={rama} setRamas={setRamas} setRamaActive={setRamaActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { RamaForm } from './RamaForm';\r\nimport { RamaTableForm } from './RamaTableForm';\r\n\r\nexport const RamaScreen = () => {\r\n\r\n    const initialRama = {\r\n        id: 0,\r\n        nombre: '',\r\n        edadMinima: 0,\r\n        edadMaxima: 0,\r\n        descripcion: '',\r\n        idGrupo: 0,\r\n        nombreGrupo: ''\r\n    };\r\n    const[ramas, setRamas] = useState([]);\r\n    const[ramaActive, setRamaActive] = useState(initialRama);\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Ramas</h1>\r\n            <hr/>\r\n            <RamaForm \r\n                ramaActive = { ramaActive } \r\n                setRamaActive = {setRamaActive} \r\n                initialRama={initialRama} />\r\n            <RamaTableForm \r\n                ramas = { ramas }  \r\n                setRamas = { setRamas } \r\n                setRamaActive = { setRamaActive } />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HOST_URL_BACK, METHOD_POST, METHOD_PUT, API_SECCIONES } from '../../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { messageLoadingSwal, messageCloseSwal, messageSuccessSwal } from '../../util/messages';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHandSparkles, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingSecciones } from '../../actions/seccionAction';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\nimport { filterRamasByGrupo } from '../../util/selectors';\r\n\r\nexport const SeccionForm = ({ seccionActive, setSeccionActive, initialSeccion}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { grupoReducer:{grupos}, ramaReducer:{ramas}, authReducer } = useSelector( state => state);  \r\n    const[ramasFilter, setRamasFilter] = useState([]);\r\n    const [formValues, handleInputChange, handleObjectChange, reset] = useForm(initialSeccion);\r\n    \r\n    useEffect(() => {\r\n        setRamasFilter(filterRamasByGrupo(ramas, formValues.idGrupo));\r\n    }, [formValues.idGrupo])\r\n       \r\n    useEffect(() => {\r\n        if(seccionActive.id){ \r\n            handleObjectChange(seccionActive);\r\n        }\r\n    }, [seccionActive]);\r\n\r\n    const handleSubmit = () =>{\r\n        messageLoadingSwal();\r\n        if(formValues.id === 0){\r\n            createSeccion();\r\n        } else {\r\n            updateSeccion(formValues.id);\r\n        }    \r\n    }\r\n\r\n    const createSeccion = () => {\r\n        commandFetch(`${HOST_URL_BACK}${API_SECCIONES}/rama/${formValues.idRama}`, METHOD_POST, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.CREATED){\r\n                response.json().then(() => {                  \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Seccion creada con exito\");\r\n                    dispatch(startLoadingSecciones());\r\n                    handleClean();\r\n                })                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const updateSeccion = (id) => {\r\n        commandFetch(`${HOST_URL_BACK}${API_SECCIONES}/${id}`, METHOD_PUT, formValues, authReducer?.token)\r\n        .then(response => {\r\n            if(response.status === StatusCodes.ACCEPTED){\r\n                response.json().then(() => {                   \r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Seccion actualizada con exito\");\r\n                    dispatch(startLoadingSecciones());\r\n                    handleClean();\r\n                });                \r\n            } else {\r\n                controlErrorFetch(response, dispatch);                \r\n            }\r\n        })\r\n        .catch(error =>  {\r\n            controlErrorFetch(error, dispatch);\r\n        });\r\n    }\r\n\r\n    const handleClean = () =>{\r\n        setSeccionActive(initialSeccion);\r\n        reset(initialSeccion);\r\n    }\r\n\r\n    const getSelectedGrupo = (grupoId) =>  formValues && formValues.idGrupo === grupoId ? 'selected': '';\r\n    const getSelectedRama = (ramaId) =>  formValues && formValues.idRama === ramaId ? 'selected': '';\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Grupo</label>\r\n                        <select\r\n                            name=\"idGrupo\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedGrupo(0)}>Seleccione un grupo</option>\r\n                            {                                \r\n                                grupos && grupos.map(grupo => \r\n                                                        <option key={grupo.id} \r\n                                                                value={grupo.id} \r\n                                                                selected={getSelectedGrupo(grupo.id)}>\r\n                                                            {grupo.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>  \r\n                    </div>                    \r\n                    <div  className=\"mt-2\">               \r\n                        <label>Rama</label>\r\n                        <select                            \r\n                            name=\"idRama\"  \r\n                            className=\"form-control\"\r\n                            onChange={handleInputChange}>\r\n                            <option value=\"0\" selected={getSelectedRama(0)}>Seleccione una rama</option>\r\n                            {                                \r\n                                ramasFilter && ramasFilter.map(rama => \r\n                                                        <option key={rama.id} \r\n                                                                value={rama.id} \r\n                                                                selected={getSelectedRama(rama.id)}>\r\n                                                            {rama.nombre}\r\n                                                        </option>)\r\n                            }        \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div>\r\n                        <label>Nombre</label> \r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombre\" \r\n                            className=\"form-control\"\r\n                            value= {formValues.nombre} \r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <label>Descripcion</label>  \r\n                        <textarea \r\n                            name=\"descripcion\" \r\n                            className=\"form-control\" \r\n                            value={formValues.descripcion}\r\n                            onChange={handleInputChange}/>\r\n                    </div>\r\n                </div>                          \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button onClick={handleClean} className=\"btn btn-primary\"><FontAwesomeIcon icon={faHandSparkles}/> Limpiar</button>\r\n                &nbsp;&nbsp;\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\"><FontAwesomeIcon icon={faSave}/> Guardar</button>\r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPenAlt, faTruckLoading } from '@fortawesome/free-solid-svg-icons';\r\nimport { commandFetch } from '../../helpers/commandFetch';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { filterDropById } from '../../util/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingSecciones } from '../../actions/seccionAction';\r\nimport { HOST_URL_BACK, \r\n        API_SECCIONES, \r\n        METHOD_DELETE,\r\n        TYPE_CARGO_SECCION } from '../../util/constant';\r\nimport { messageLoadingSwal, \r\n        messageCloseSwal, \r\n        messageErrorSwal, \r\n        messageSuccessSwal, \r\n        messageConfirmSwal } from '../../util/messages';\r\nimport { controlErrorFetch } from '../../helpers/controlErrorFetch';\r\n\r\n\r\nexport const SeccionTableRowForm = ({ seccion, setSecciones, setSeccionActive }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const history= useHistory();\r\n\r\n    const handleSetSeccionActive = () => {\r\n        setSeccionActive(seccion);\r\n    };\r\n\r\n    const handleDeleteSeccion = () => {\r\n        messageConfirmSwal(`Quiere eliminar la seccion ${seccion.nombre}`, () =>{\r\n            messageLoadingSwal();\r\n            commandFetch(`${HOST_URL_BACK}${API_SECCIONES}/${seccion.id}`, METHOD_DELETE, undefined, authReducer?.token)\r\n            .then(response => {\r\n                if(response.status === StatusCodes.ACCEPTED){\r\n                    setSecciones(secciones => filterDropById(secciones, seccion.id));\r\n                    messageCloseSwal();\r\n                    messageSuccessSwal(\"Seccion eliminada con exito\");\r\n                    dispatch(startLoadingSecciones());                              \r\n                } else {\r\n                    controlErrorFetch(response, dispatch);                 \r\n                }\r\n            })\r\n            .catch(error =>  {\r\n                controlErrorFetch(error, dispatch);\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleGoCargos = () => {       \r\n        history.replace(`/cargo/type/${TYPE_CARGO_SECCION}/id/${seccion.id}`);   \r\n    }    \r\n    \r\n    return (\r\n        <tr>\r\n            <td>{seccion.nombreGrupo}</td>\r\n            <td>{seccion.nombreRama}</td>\r\n            <td>{seccion.nombre}</td>\r\n            <td>{seccion.descripcion}</td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" onClick={ handleSetSeccionActive } title=\"Editar\"><FontAwesomeIcon icon={faPenAlt}/></div>\r\n                    <div className=\"col-2\" onClick={ handleDeleteSeccion } title=\"Eliminar\"><FontAwesomeIcon icon={faTrash}/></div>\r\n                    <div className=\"col-2\" onClick={ handleGoCargos } title=\"Ver cargos\"><FontAwesomeIcon icon={faTruckLoading}/></div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nSeccionTableRowForm.prototype = {\r\n    seccion : PropTypes.object.isRequired,\r\n    setSecciones: PropTypes.func.isRequired,\r\n    setSeccionActive: PropTypes.func.isRequired,\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { SeccionTableRowForm } from './SeccionTableRowForm';\r\n\r\nexport const SeccionTableForm = ({ secciones, setSecciones, setSeccionActive }) => {\r\n    \r\n    const seccionReducer= useSelector( state => state)?.seccionReducer;\r\n\r\n    useEffect(() => {\r\n        setSecciones(seccionReducer?.secciones);\r\n    }, [seccionReducer]);\r\n    \r\n    return (\r\n        <div className=\"mt-3\">\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr className=\"background_libro_oro\">\r\n                        <th scope=\"col\">Grupo</th>                        \r\n                        <th scope=\"col\">Rama</th>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Descripcion</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {\r\n                       secciones && secciones.map(seccion => \r\n                            <SeccionTableRowForm \r\n                                key={seccion.id} \r\n                                seccion={seccion} \r\n                                setSecciones={setSecciones} \r\n                                setSeccionActive={setSeccionActive} />)\r\n                   }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { SeccionForm } from './SeccionForm';\r\nimport { SeccionTableForm } from './SeccionTableForm';\r\n\r\nexport const SeccionScreen = () => {\r\n\r\n    const initialSeccion = {\r\n        id: 0,\r\n        nombre: '',\r\n        descripcion: '',\r\n        idRama: 0,\r\n        nombreRama: '',\r\n        idGrupo: 0,\r\n        nombreGrupo: ''\r\n    }\r\n    const[secciones, setSecciones] = useState([]);\r\n    const[seccionActive, setSeccionActive] = useState({});\r\n\r\n    return (\r\n        <div className=\"content animate__animated animate__slideInLeft\">\r\n            <h1>Secciones</h1>\r\n            <hr/>\r\n            <SeccionForm \r\n                seccionActive = { seccionActive } \r\n                setSeccionActive = {setSeccionActive}\r\n                initialSeccion = { initialSeccion } />\r\n            <SeccionTableForm \r\n                secciones = { secciones }  \r\n                setSecciones = { setSecciones } \r\n                setSeccionActive = { setSeccionActive } />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { CargoScreen } from '../components/cargo/CargoScreen';\nimport { GrupoScreen } from '../components/grupo/GrupoScreen';\nimport { RamaScreen } from '../components/rama/RamaScreen';\nimport { SeccionScreen } from '../components/seccion/SeccionScreen';\n\n\nexport const PrivateRoute = () => {\n\n    return (\n        <>\n            <div className=\"container mt-2\">\n                <Switch>\n                    <Route exact path=\"/grupo\" component={GrupoScreen} />\n                    <Route exact path=\"/rama\" component={RamaScreen} />\n                    <Route exact path=\"/seccion\" component={SeccionScreen} />\n                    <Route exact path=\"/cargo/type/:typecargo/id/:typeId\" component={CargoScreen} />   \n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </>\n    )\n}\n","import { queryFetch } from \"../helpers/queryFetch\";\r\nimport { types } from \"../types/types\";\r\nimport { HOST_URL_BACK, API_CARGOS } from '../util/constant';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport { controlErrorFetch } from \"../helpers/controlErrorFetch\";\r\n\r\nexport const startLoadingCargos = () => {\r\n    return async(dispatch) => {\r\n        const cargos = [];\r\n\r\n        await queryFetch(`${HOST_URL_BACK}${API_CARGOS}`)\r\n            .then(resp => {\r\n                if(resp.status === StatusCodes.OK){\r\n                    return resp.json()\r\n                }else{\r\n                    return new Promise((resolve, reject) => reject({status: resp.status}));\r\n                }\r\n            })\r\n            .then(data =>{\r\n                if(data.length > 0){\r\n                    data.forEach(elemnt => {\r\n                        cargos.push({\r\n                            id: elemnt.id,\r\n                            nombre: elemnt.nombre,\r\n                            descripcion: elemnt.descripcion,\r\n                            idGrupo: elemnt.grupo?.id,\r\n                            idRama: elemnt.rama?.id,\r\n                            idSeccion: elemnt.seccion?.id,\r\n                        });\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                controlErrorFetch(err, dispatch);\r\n            });\r\n        \r\n        dispatch(startSetCargos(cargos));\r\n    }\r\n};\r\n\r\nexport const startSetCargos = (cargos) => ({\r\n    type: types.cargosLoad,\r\n    payload: cargos,\r\n});\r\n\r\nexport const startRemoveCargos = () => ({\r\n    type: types.cargosRemove,\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { setAuthFromLocalStorage, validateLocalStorageAuth } from '../actions/authAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLoadingGrupos } from '../actions/grupoAction';\r\nimport { startLoadingRamas } from '../actions/ramaAction';\r\nimport { startLoadingSecciones } from '../actions/seccionAction';\r\nimport { setInactiveWarningFunc } from '../helpers/controlErrorFetch';\r\nimport { startLoadingCargos } from '../actions/cargoAction';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { authReducer }= useSelector( state => state);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(authReducer?.usuario){\r\n            setIsLoggedIn(true);                        \r\n            setInactiveWarningFunc();\r\n        }else if(validateLocalStorageAuth()){\r\n            dispatch(setAuthFromLocalStorage());\r\n        }else {\r\n            setIsLoggedIn(false); \r\n        }\r\n        dispatch(startLoadingGrupos());\r\n        dispatch(startLoadingRamas());\r\n        dispatch(startLoadingSecciones());\r\n        dispatch(startLoadingCargos());\r\n    }, [authReducer, setIsLoggedIn]);\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Navbar/>\r\n\r\n                <div>\r\n                    <Switch>\r\n\r\n                        {\r\n                            !isLoggedIn &&\r\n                                <PublicRoute />\r\n                        }\r\n\r\n                        {\r\n                            isLoggedIn && \r\n                                <PrivateRoute />\r\n                        }\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                        \r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    cargos: []\r\n}\r\n\r\nexport const cargoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.cargosLoad:\r\n            return {\r\n                ...state,\r\n                cargos: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.cargosRemove:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    grupos: []\r\n}\r\n\r\nexport const grupoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.gruposLoad:\r\n            return {\r\n                ...state,\r\n                grupos: [ ...action.payload ]\r\n            }\r\n\r\n        case types.gruposRemove:\r\n            return {}        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    ramas: []\r\n}\r\n\r\nexport const ramaReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.ramasLoad:\r\n            return {\r\n                ...state,\r\n                ramas: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.ramasRemove:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    secciones: []\r\n}\r\n\r\nexport const seccionReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.seccionesLoad:\r\n            return {\r\n                ...state,\r\n                secciones: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.seccionesRemove:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { cargoReducer } from '../reducers/cargoReducer';\r\nimport { grupoReducer } from '../reducers/grupoReducer';\r\nimport { ramaReducer } from '../reducers/ramaReducer';\r\nimport { seccionReducer } from '../reducers/seccionReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    authReducer: authReducer,\r\n    grupoReducer: grupoReducer,\r\n    ramaReducer: ramaReducer,\r\n    seccionReducer: seccionReducer,\r\n    cargoReducer: cargoReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","\r\nimport { types } from '../types/types';\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                usuario: action.payload.usuario,\r\n                token: action.payload.token,\r\n                tipoUsuario: action.payload.tipoUsuario \r\n            }\r\n        case types.logout:\r\n                return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const Librodeoro = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Librodeoro } from './Librodeoro';\nimport './styles/styles.css'\n\nReactDOM.render(\n  <Librodeoro/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}